{"ast":null,"code":"var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapQuestGeocoder = function MapQuestGeocoder(httpAdapter, apiKey) {\n  MapQuestGeocoder.super_.call(this, httpAdapter);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error('MapQuestGeocoder needs an apiKey');\n  }\n  this.apiKey = apiKey;\n};\nutil.inherits(MapQuestGeocoder, AbstractGeocoder);\nMapQuestGeocoder.prototype._endpoint = 'https://www.mapquestapi.com/geocoding/v1';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (Address)\n* @param <function> callback Callback method\n*/\nMapQuestGeocoder.prototype._geocode = function (value, callback) {\n  var params = {\n    'key': querystring.unescape(this.apiKey)\n  };\n  if (typeof value === 'object') {\n    if (value.address) {\n      params.street = value.address;\n    }\n    if (value.country) {\n      params.country = value.country;\n    }\n    if (value.zipcode) {\n      params.postalCode = value.zipcode;\n    }\n    if (value.city) {\n      params.city = value.city;\n    }\n  } else {\n    params.location = value;\n  }\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/address', params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.info.statuscode !== 0) {\n        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]), {\n          raw: result\n        });\n      }\n      var results = [];\n      if (result.results && result.results.length) {\n        var locations = result.results[0].locations;\n        for (var i = 0; i < locations.length; i++) {\n          results.push(_this._formatResult(locations[i]));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nMapQuestGeocoder.prototype._formatResult = function (result) {\n  return {\n    formattedAddress: [result.street, result.adminArea5, (result.adminArea3 + ' ' + result.postalCode).trim(), result.adminArea1].join(', '),\n    'latitude': result.latLng.lat,\n    'longitude': result.latLng.lng,\n    'country': null,\n    'city': result.adminArea5,\n    'stateCode': result.adminArea3,\n    'zipcode': result.postalCode,\n    'streetName': result.street,\n    'streetNumber': null,\n    'countryCode': result.adminArea1\n  };\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param <function> callback Callback method\n*/\nMapQuestGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'location': lat + ',' + lng,\n    'key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      var locations = result.results[0].locations;\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nmodule.exports = MapQuestGeocoder;","map":{"version":3,"names":["querystring","require","util","AbstractGeocoder","MapQuestGeocoder","httpAdapter","apiKey","super_","call","Error","inherits","prototype","_endpoint","_geocode","value","callback","params","unescape","address","street","country","zipcode","postalCode","city","location","_this","get","err","result","info","statuscode","messages","raw","results","length","locations","i","push","_formatResult","formattedAddress","adminArea5","adminArea3","trim","adminArea1","join","latLng","lat","lng","_reverse","query","lon","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/mapquestgeocoder.js"],"sourcesContent":["var querystring      = require('querystring'),\n    util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapQuestGeocoder = function MapQuestGeocoder(httpAdapter, apiKey) {\n\n  MapQuestGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n\n    throw new Error('MapQuestGeocoder needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n};\n\nutil.inherits(MapQuestGeocoder, AbstractGeocoder);\n\nMapQuestGeocoder.prototype._endpoint = 'https://www.mapquestapi.com/geocoding/v1';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (Address)\n* @param <function> callback Callback method\n*/\nMapQuestGeocoder.prototype._geocode = function(value, callback) {\n  var params = {'key' : querystring.unescape(this.apiKey)};\n  if (typeof value === 'object') {\n    if (value.address) {\n      params.street = value.address;\n    }\n    if (value.country) {\n      params.country = value.country;\n    }\n    if (value.zipcode) {\n      params.postalCode = value.zipcode;\n    }\n    if (value.city) {\n      params.city = value.city;\n    }\n  } else {\n    params.location = value;\n  }\n\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/address' , params, function(err, result) {\n    if (err) {\n        return callback(err);\n    } else {\n      if (result.info.statuscode !== 0) {\n        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]),{raw:result});\n      }\n\n      var results = [];\n      if (result.results && result.results.length) {\n        var locations = result.results[0].locations;\n\n        for(var i = 0; i < locations.length; i++) {\n          results.push(_this._formatResult(locations[i]));\n        }\n      }\n\n      results.raw = result;\n\n      callback(false, results);\n    }\n  });\n};\n\nMapQuestGeocoder.prototype._formatResult = function(result) {\n  return {\n    formattedAddress: [result.street, result.adminArea5, (result.adminArea3 + ' ' + result.postalCode).trim(), result.adminArea1].join(', '),\n    'latitude' : result.latLng.lat,\n    'longitude' : result.latLng.lng,\n    'country' : null,\n    'city' : result.adminArea5,\n    'stateCode' : result.adminArea3,\n    'zipcode' : result.postalCode,\n    'streetName': result.street,\n    'streetNumber' : null,\n    'countryCode' : result.adminArea1\n  };\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param <function> callback Callback method\n*/\nMapQuestGeocoder.prototype._reverse = function(query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/reverse' , { 'location' : lat + ',' + lng, 'key' : querystring.unescape(this.apiKey)}, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      var locations = result.results[0].locations;\n\n      for(var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = MapQuestGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}