{"ast":null,"code":"var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar OpenStreetMapGeocoder = function OpenStreetMapGeocoder(httpAdapter, options) {\n  this.options = ['language', 'email', 'apiKey', 'osmServer'];\n  OpenStreetMapGeocoder.super_.call(this, httpAdapter, options);\n  var osmServer = options && options.osmServer || 'http://nominatim.openstreetmap.org';\n  OpenStreetMapGeocoder.prototype._endpoint = osmServer + '/search';\n  OpenStreetMapGeocoder.prototype._endpoint_reverse = osmServer + '/reverse';\n};\nutil.inherits(OpenStreetMapGeocoder, AbstractGeocoder);\nOpenStreetMapGeocoder.prototype._endpoint = 'https://nominatim.openstreetmap.org/search';\nOpenStreetMapGeocoder.prototype._endpoint_reverse = 'https://nominatim.openstreetmap.org/reverse';\n\n/**\n* Geocode\n* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://wiki.openstreetmap.org/wiki/Nominatim#Parameters)\n* @param <function> callback Callback method\n*/\nOpenStreetMapGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = this._getCommonParams();\n  params.addressdetails = 1;\n  if (typeof value == 'string') {\n    params.q = value;\n  } else {\n    for (var k in value) {\n      var v = value[k];\n      params[k] = v;\n    }\n  }\n  this._forceParams(params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      if (result.error) {\n        return callback(new Error(result.error));\n      }\n      if (result instanceof Array) {\n        for (var i = 0; i < result.length; i++) {\n          results.push(_this._formatResult(result[i]));\n        }\n      } else {\n        results.push(_this._formatResult(result));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nOpenStreetMapGeocoder.prototype._formatResult = function (result) {\n  var countryCode = result.address.country_code;\n  if (countryCode) {\n    countryCode = countryCode.toUpperCase();\n  }\n  var latitude = result.lat;\n  if (latitude) {\n    latitude = parseFloat(latitude);\n  }\n  var longitude = result.lon;\n  if (longitude) {\n    longitude = parseFloat(longitude);\n  }\n  return {\n    'latitude': latitude,\n    'longitude': longitude,\n    'formattedAddress': result.display_name,\n    'country': result.address.country,\n    'city': result.address.city || result.address.town || result.address.village || result.address.hamlet,\n    'state': result.address.state,\n    'zipcode': result.address.postcode,\n    'streetName': result.address.road || result.address.cycleway,\n    'streetNumber': result.address.house_number,\n    'countryCode': countryCode,\n    'neighbourhood': result.address.neighbourhood || ''\n  };\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2\n* @param <function> callback Callback method\n*/\nOpenStreetMapGeocoder.prototype._reverse = function (query, callback) {\n  var _this = this;\n  var params = this._getCommonParams();\n  for (var k in query) {\n    var v = query[k];\n    params[k] = v;\n  }\n  this._forceParams(params);\n  this.httpAdapter.get(this._endpoint_reverse, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.error) {\n        return callback(new Error(result.error));\n      }\n      var results = [];\n      if (result instanceof Array) {\n        for (var i = 0; i < result.length; i++) {\n          results.push(_this._formatResult(result[i]));\n        }\n      } else {\n        results.push(_this._formatResult(result));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nOpenStreetMapGeocoder.prototype._getCommonParams = function () {\n  var params = {};\n  for (var k in this.options) {\n    var v = this.options[k];\n    if (!v) {\n      continue;\n    }\n    if (k === 'language') {\n      k = 'accept-language';\n    }\n    params[k] = v;\n  }\n  return params;\n};\nOpenStreetMapGeocoder.prototype._forceParams = function (params) {\n  params.format = 'json';\n  params.addressdetails = 1;\n};\nmodule.exports = OpenStreetMapGeocoder;","map":{"version":3,"names":["util","require","AbstractGeocoder","OpenStreetMapGeocoder","httpAdapter","options","super_","call","osmServer","prototype","_endpoint","_endpoint_reverse","inherits","_geocode","value","callback","_this","params","_getCommonParams","addressdetails","q","k","v","_forceParams","get","err","result","results","error","Error","Array","i","length","push","_formatResult","raw","countryCode","address","country_code","toUpperCase","latitude","lat","parseFloat","longitude","lon","display_name","country","city","town","village","hamlet","state","postcode","road","cycleway","house_number","neighbourhood","_reverse","query","format","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/openstreetmapgeocoder.js"],"sourcesContent":["var util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar OpenStreetMapGeocoder = function OpenStreetMapGeocoder(httpAdapter, options) {\n    this.options = ['language','email','apiKey', 'osmServer'];\n\n    OpenStreetMapGeocoder.super_.call(this, httpAdapter, options);\n    var osmServer = (options && options.osmServer) || 'http://nominatim.openstreetmap.org';\n    OpenStreetMapGeocoder.prototype._endpoint = osmServer + '/search';\n    OpenStreetMapGeocoder.prototype._endpoint_reverse = osmServer + '/reverse';\n};\n\nutil.inherits(OpenStreetMapGeocoder, AbstractGeocoder);\n\nOpenStreetMapGeocoder.prototype._endpoint = 'https://nominatim.openstreetmap.org/search';\n\nOpenStreetMapGeocoder.prototype._endpoint_reverse = 'https://nominatim.openstreetmap.org/reverse';\n\n/**\n* Geocode\n* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://wiki.openstreetmap.org/wiki/Nominatim#Parameters)\n* @param <function> callback Callback method\n*/\nOpenStreetMapGeocoder.prototype._geocode = function(value, callback) {\n    var _this = this;\n\n    var params = this._getCommonParams();\n    params.addressdetails = 1;\n    if (typeof value == 'string') {\n      params.q = value;\n    } else {\n      for (var k in value) {\n        var v = value[k];\n        params[k] = v;\n      }\n    }\n    this._forceParams(params);\n\n    this.httpAdapter.get(this._endpoint , params, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n\n            var results = [];\n\n            if(result.error) {\n              return callback(new Error(result.error));\n            }\n\n            if (result instanceof Array) {\n              for (var i = 0; i < result.length; i++) {\n                results.push(_this._formatResult(result[i]));\n              }\n            } else {\n              results.push(_this._formatResult(result));\n            }\n\n            results.raw = result;\n            callback(false, results);\n        }\n\n    });\n\n};\n\nOpenStreetMapGeocoder.prototype._formatResult = function(result) {\n\n    var countryCode = result.address.country_code;\n    if (countryCode) {\n        countryCode = countryCode.toUpperCase();\n    }\n\n    var latitude = result.lat;\n    if (latitude) {\n      latitude = parseFloat(latitude);\n    }\n\n    var longitude = result.lon;\n    if (longitude) {\n      longitude = parseFloat(longitude);\n    }\n\n    return {\n        'latitude' : latitude,\n        'longitude' : longitude,\n        'formattedAddress': result.display_name,\n        'country' : result.address.country,\n        'city' : result.address.city || result.address.town || result.address.village || result.address.hamlet,\n        'state': result.address.state,\n        'zipcode' : result.address.postcode,\n        'streetName': result.address.road || result.address.cycleway,\n        'streetNumber' : result.address.house_number,\n        'countryCode' : countryCode,\n        'neighbourhood': result.address.neighbourhood || ''\n    };\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2\n* @param <function> callback Callback method\n*/\nOpenStreetMapGeocoder.prototype._reverse = function(query, callback) {\n\n    var _this = this;\n\n    var params = this._getCommonParams();\n    for (var k in query) {\n      var v = query[k];\n      params[k] = v;\n    }\n    this._forceParams(params);\n\n    this.httpAdapter.get(this._endpoint_reverse , params, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n          if(result.error) {\n            return callback(new Error(result.error));\n          }\n\n          var results = [];\n          if (result instanceof Array) {\n            for (var i = 0; i < result.length; i++) {\n              results.push(_this._formatResult(result[i]));\n            }\n          } else {\n            results.push(_this._formatResult(result));\n          }\n\n          results.raw = result;\n          callback(false, results);\n        }\n    });\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nOpenStreetMapGeocoder.prototype._getCommonParams = function(){\n    var params = {};\n\n    for (var k in this.options) {\n      var v = this.options[k];\n      if (!v) {\n        continue;\n      }\n      if (k === 'language') {\n        k = 'accept-language';\n      }\n      params[k] = v;\n    }\n\n    return params;\n};\n\nOpenStreetMapGeocoder.prototype._forceParams = function(params){\n    params.format = 'json';\n    params.addressdetails = 1;\n};\n\nmodule.exports = OpenStreetMapGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}