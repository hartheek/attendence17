{"ast":null,"code":"var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n// http://geocoder.opencagedata.com/api.html#confidence\nvar ConfidenceInKM = {\n  10: 0.25,\n  9: 0.5,\n  8: 1,\n  7: 5,\n  6: 7.5,\n  5: 10,\n  4: 15,\n  3: 20,\n  2: 25,\n  1: Number.POSITIVE_INFINITY,\n  0: Number.NaN\n};\n\n/**\n * Constructor\n */\nvar OpenCageGeocoder = function OpenCageGeocoder(httpAdapter, apiKey, options) {\n  this.options = ['language'];\n  OpenCageGeocoder.super_.call(this, httpAdapter, options);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n  this.apiKey = apiKey;\n  this._endpoint = 'http://api.opencagedata.com/geocode/v1/json';\n  this._ConfidenceInKM = ConfidenceInKM; // In case we need to support v1/v2 and this changes\n};\nutil.inherits(OpenCageGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nOpenCageGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = this._getCommonParams();\n  if (value.address) {\n    if (value.bounds) {\n      if (Array.isArray(value.bounds)) {\n        params.bounds = value.bounds.join(',');\n      } else {\n        params.bounds = value.bounds;\n      }\n    }\n    if (value.countryCode) {\n      params.countrycode = value.countryCode;\n    }\n    if (value.limit) {\n      params.limit = value.limit;\n    }\n    if (value.minConfidence) {\n      params.min_confidence = value.minConfidence;\n    }\n    if (value.language) {\n      params.language = value.language;\n    }\n    params.q = value.address;\n  } else {\n    params.q = value;\n  }\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      if (result && result.results instanceof Array) {\n        for (var i = 0; i < result.results.length; i++) {\n          results.push(_this._formatResult(result.results[i]));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nOpenCageGeocoder.prototype._formatResult = function (result) {\n  var confidence = result.confidence || 0;\n  return {\n    latitude: result.geometry.lat,\n    longitude: result.geometry.lng,\n    country: result.components.country,\n    city: result.components.city,\n    state: result.components.state,\n    zipcode: result.components.postcode,\n    streetName: result.components.road,\n    streetNumber: result.components.house_number,\n    countryCode: result.components.country_code,\n    county: result.components.county,\n    extra: {\n      confidence: confidence,\n      confidenceKM: this._ConfidenceInKM[result.confidence] || Number.NaN\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nOpenCageGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  var params = this._getCommonParams();\n  params.q = lat + ' ' + lng;\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      callback(err);\n    } else {\n      var results = [];\n      if (result && result.results instanceof Array) {\n        for (var i = 0; i < result.results.length; i++) {\n          results.push(_this._formatResult(result.results[i]));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n * Prepare common params\n *\n * @return <Object> common params\n */\nOpenCageGeocoder.prototype._getCommonParams = function () {\n  var params = {};\n  params.key = this.apiKey;\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n  return params;\n};\nmodule.exports = OpenCageGeocoder;","map":{"version":3,"names":["util","require","AbstractGeocoder","ConfidenceInKM","Number","POSITIVE_INFINITY","NaN","OpenCageGeocoder","httpAdapter","apiKey","options","super_","call","Error","constructor","name","_endpoint","_ConfidenceInKM","inherits","prototype","_geocode","value","callback","_this","params","_getCommonParams","address","bounds","Array","isArray","join","countryCode","countrycode","limit","minConfidence","min_confidence","language","q","get","err","result","results","i","length","push","_formatResult","raw","confidence","latitude","geometry","lat","longitude","lng","country","components","city","state","zipcode","postcode","streetName","road","streetNumber","house_number","country_code","county","extra","confidenceKM","_reverse","query","lon","key","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/opencagegeocoder.js"],"sourcesContent":["var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n// http://geocoder.opencagedata.com/api.html#confidence\nvar ConfidenceInKM = {\n  10: 0.25,\n  9: 0.5,\n  8: 1,\n  7: 5,\n  6: 7.5,\n  5: 10,\n  4: 15,\n  3: 20,\n  2: 25,\n  1: Number.POSITIVE_INFINITY,\n  0: Number.NaN\n};\n\n/**\n * Constructor\n */\nvar OpenCageGeocoder = function OpenCageGeocoder(httpAdapter, apiKey, options) {\n  this.options = ['language'];\n\n  OpenCageGeocoder.super_.call(this, httpAdapter, options);\n\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'http://api.opencagedata.com/geocode/v1/json';\n  this._ConfidenceInKM = ConfidenceInKM; // In case we need to support v1/v2 and this changes\n};\n\nutil.inherits(OpenCageGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nOpenCageGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n\n  var params = this._getCommonParams();\n  if (value.address) {\n    if (value.bounds) {\n      if (Array.isArray(value.bounds)) {\n        params.bounds = value.bounds.join(',');\n      } else {\n        params.bounds = value.bounds;\n      }\n    }\n    if (value.countryCode) {\n      params.countrycode = value.countryCode;\n    }\n    if (value.limit) {\n      params.limit = value.limit;\n    }\n    if (value.minConfidence) {\n      params.min_confidence = value.minConfidence;\n    }\n    if (value.language) {\n      params.language = value.language;\n    }\n    params.q = value.address;\n  } else {\n    params.q = value;\n  }\n\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      if (result && result.results instanceof Array) {\n        for (var i = 0; i < result.results.length; i++) {\n          results.push(_this._formatResult(result.results[i]));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nOpenCageGeocoder.prototype._formatResult = function (result) {\n  var confidence = result.confidence || 0;\n  return {\n    latitude: result.geometry.lat,\n    longitude: result.geometry.lng,\n    country: result.components.country,\n    city: result.components.city,\n    state: result.components.state,\n    zipcode: result.components.postcode,\n    streetName: result.components.road,\n    streetNumber: result.components.house_number,\n    countryCode: result.components.country_code,\n    county: result.components.county,\n    extra: {\n      confidence: confidence,\n      confidenceKM: this._ConfidenceInKM[result.confidence] || Number.NaN\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nOpenCageGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  var params = this._getCommonParams();\n  params.q = lat + ' ' + lng;\n\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      callback(err);\n    } else {\n      var results = [];\n\n      if (result && result.results instanceof Array) {\n        for (var i = 0; i < result.results.length; i++) {\n          results.push(_this._formatResult(result.results[i]));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n * Prepare common params\n *\n * @return <Object> common params\n */\nOpenCageGeocoder.prototype._getCommonParams = function () {\n  var params = {};\n  params.key = this.apiKey;\n\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n\n  return params;\n};\n\nmodule.exports = OpenCageGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}