{"ast":null,"code":"var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapQuestGeocoder = function OpenMapQuestGeocoder(httpAdapter, apiKey) {\n  MapQuestGeocoder.super_.call(this, httpAdapter);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n  this.apiKey = apiKey;\n  this._endpoint = 'https://open.mapquestapi.com/geocoding/v1';\n};\nutil.inherits(MapQuestGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nMapQuestGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/address', {\n    'location': value,\n    'key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.info.statuscode !== 0) {\n        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]), {\n          raw: result\n        });\n      }\n      var results = [];\n      var locations = result.results[0].locations;\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nMapQuestGeocoder.prototype._formatResult = function (result) {\n  var MQConfidenceLookup = {\n    POINT: 1,\n    ADDRESS: 0.9,\n    INTERSECTION: 0.8,\n    //less accurate than the MQ description\n    STREET: 0.7,\n    ZIP: 0.5,\n    ZIP_EXTENDED: 0.5,\n    NEIGHBORHOOD: 0.5,\n    CITY: 0.4,\n    COUNTY: 0.3,\n    STATE: 0.2,\n    COUNTRY: 0.1\n  };\n  return {\n    'latitude': result.latLng.lat,\n    'longitude': result.latLng.lng,\n    'country': null,\n    'countryCode': result.adminArea1,\n    'city': result.adminArea5,\n    'state': result.adminArea3,\n    'zipcode': result.postalCode,\n    'streetName': result.street,\n    'streetNumber': null,\n    'extra': {\n      confidence: MQConfidenceLookup[result.geocodeQuality] || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nMapQuestGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'location': lat + ',' + lng,\n    'key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      var locations;\n      if (result.results === undefined || !result.results.length) {\n        return callback(new Error('Incorrect response'));\n      }\n      locations = result.results[0].locations;\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nmodule.exports = MapQuestGeocoder;","map":{"version":3,"names":["querystring","require","util","AbstractGeocoder","MapQuestGeocoder","OpenMapQuestGeocoder","httpAdapter","apiKey","super_","call","Error","constructor","name","_endpoint","inherits","prototype","_geocode","value","callback","_this","get","unescape","err","result","info","statuscode","messages","raw","results","locations","i","length","push","_formatResult","MQConfidenceLookup","POINT","ADDRESS","INTERSECTION","STREET","ZIP","ZIP_EXTENDED","NEIGHBORHOOD","CITY","COUNTY","STATE","COUNTRY","latLng","lat","lng","adminArea1","adminArea5","adminArea3","postalCode","street","confidence","geocodeQuality","_reverse","query","lon","undefined","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/openmapquestgeocoder.js"],"sourcesContent":["var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapQuestGeocoder = function OpenMapQuestGeocoder(httpAdapter, apiKey) {\n\n  MapQuestGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'https://open.mapquestapi.com/geocoding/v1';\n};\n\nutil.inherits(MapQuestGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nMapQuestGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/address', {\n    'location': value,\n    'key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.info.statuscode !== 0) {\n        return callback(new Error('Status is ' + result.info.statuscode + ' ' + result.info.messages[0]), {raw: result});\n      }\n\n      var results = [];\n\n      var locations = result.results[0].locations;\n\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nMapQuestGeocoder.prototype._formatResult = function (result) {\n  var MQConfidenceLookup = {\n    POINT: 1,\n    ADDRESS: 0.9,\n    INTERSECTION: 0.8, //less accurate than the MQ description\n    STREET: 0.7,\n    ZIP: 0.5,\n    ZIP_EXTENDED: 0.5,\n    NEIGHBORHOOD: 0.5,\n    CITY: 0.4,\n    COUNTY: 0.3,\n    STATE: 0.2,\n    COUNTRY: 0.1\n  };\n  return {\n    'latitude': result.latLng.lat,\n    'longitude': result.latLng.lng,\n    'country': null,\n    'countryCode': result.adminArea1,\n    'city': result.adminArea5,\n    'state': result.adminArea3,\n    'zipcode': result.postalCode,\n    'streetName': result.street,\n    'streetNumber': null,\n    'extra': {\n      confidence: MQConfidenceLookup[result.geocodeQuality] || 0\n    }\n\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nMapQuestGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'location': lat + ',' + lng,\n    'key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      var locations;\n\n      if (result.results === undefined || !result.results.length) {\n          return callback(new Error('Incorrect response'));\n      }\n\n      locations = result.results[0].locations;\n\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = MapQuestGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}