{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\nvar url = require('url');\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey, region, excludePartialMatches)\n */\nvar GoogleGeocoder = function GoogleGeocoder(httpAdapter, options) {\n  this.options = ['language', 'apiKey', 'clientId', 'region', 'excludePartialMatches', 'channel'];\n  GoogleGeocoder.super_.call(this, httpAdapter, options);\n  if (this.options.clientId && !this.options.apiKey) {\n    throw new Error('You must specify a apiKey (privateKey)');\n  }\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n};\nutil.inherits(GoogleGeocoder, AbstractGeocoder);\n\n// Google geocoding API endpoint\nGoogleGeocoder.prototype._endpoint = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = this._prepareQueryString();\n  if (value.address) {\n    var components = '';\n    if (value.country) {\n      components = 'country:' + value.country;\n    }\n    if (value.zipcode) {\n      if (components) {\n        components += '|';\n      }\n      components += 'postal_code:' + value.zipcode;\n    }\n    params.components = this._encodeSpecialChars(components);\n    params.address = this._encodeSpecialChars(value.address);\n  } else if (value.googlePlaceId) {\n    params.place_id = value.googlePlaceId;\n  } else {\n    params.address = this._encodeSpecialChars(value);\n  }\n  if (value.language) {\n    params.language = value.language;\n  }\n  if (value.region) {\n    params.region = value.region;\n  }\n  var excludePartialMatches = params.excludePartialMatches;\n  delete params.excludePartialMatches;\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status === 'ZERO_RESULTS') {\n        results.raw = result;\n        return callback(false, results);\n      }\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {\n          raw: result\n        });\n      }\n      for (var i = 0; i < result.results.length; i++) {\n        var currentResult = result.results[i];\n        if (excludePartialMatches && excludePartialMatches === true && typeof currentResult.partial_match !== 'undefined' && currentResult.partial_match === true) {\n          continue;\n        }\n        results.push(_this._formatResult(currentResult));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nGoogleGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    sensor: false\n  };\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n  if (this.options.region) {\n    params.region = this.options.region;\n  }\n  if (this.options.clientId) {\n    params.client = this.options.clientId;\n  } else if (this.options.apiKey) {\n    params.key = this.options.apiKey;\n  }\n  if (this.options.channel) {\n    params.channel = this.options.channel;\n  }\n  if (this.options.excludePartialMatches && this.options.excludePartialMatches === true) {\n    params.excludePartialMatches = true;\n  }\n  return params;\n};\nGoogleGeocoder.prototype._signedRequest = function (endpoint, params) {\n  if (this.options.clientId) {\n    var request = url.parse(endpoint);\n    var fullRequestPath = request.path + url.format({\n      query: params\n    });\n    var decodedKey = Buffer.from(this.options.apiKey.replace('-', '+').replace('_', '/'), 'base64');\n    var hmac = crypto.createHmac('sha1', decodedKey);\n    hmac.update(fullRequestPath);\n    var signature = hmac.digest('base64');\n    signature = signature.replace(/\\+/g, '-').replace(/\\//g, '_');\n    params.signature = signature;\n  }\n  return params;\n};\nGoogleGeocoder.prototype._formatResult = function (result) {\n  var googleConfidenceLookup = {\n    ROOFTOP: 1,\n    RANGE_INTERPOLATED: 0.9,\n    GEOMETRIC_CENTER: 0.7,\n    APPROXIMATE: 0.5\n  };\n  var extractedObj = {\n    formattedAddress: result.formatted_address || null,\n    latitude: result.geometry.location.lat,\n    longitude: result.geometry.location.lng,\n    extra: {\n      googlePlaceId: result.place_id || null,\n      confidence: googleConfidenceLookup[result.geometry.location_type] || 0,\n      premise: null,\n      subpremise: null,\n      neighborhood: null,\n      establishment: null\n    },\n    administrativeLevels: {}\n  };\n  for (var i = 0; i < result.address_components.length; i++) {\n    for (var x = 0; x < result.address_components[i].types.length; x++) {\n      var addressType = result.address_components[i].types[x];\n      switch (addressType) {\n        //Country\n        case 'country':\n          extractedObj.country = result.address_components[i].long_name;\n          extractedObj.countryCode = result.address_components[i].short_name;\n          break;\n        //Administrative Level 1\n        case 'administrative_area_level_1':\n          extractedObj.administrativeLevels.level1long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level1short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 2\n        case 'administrative_area_level_2':\n          extractedObj.administrativeLevels.level2long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level2short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 3\n        case 'administrative_area_level_3':\n          extractedObj.administrativeLevels.level3long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level3short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 4\n        case 'administrative_area_level_4':\n          extractedObj.administrativeLevels.level4long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level4short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 5\n        case 'administrative_area_level_5':\n          extractedObj.administrativeLevels.level5long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level5short = result.address_components[i].short_name;\n          break;\n        // City\n        case 'locality':\n        case 'postal_town':\n          extractedObj.city = result.address_components[i].long_name;\n          break;\n        // Address\n        case 'postal_code':\n          extractedObj.zipcode = result.address_components[i].long_name;\n          break;\n        case 'route':\n          extractedObj.streetName = result.address_components[i].long_name;\n          break;\n        case 'street_number':\n          extractedObj.streetNumber = result.address_components[i].long_name;\n          break;\n        case 'premise':\n          extractedObj.extra.premise = result.address_components[i].long_name;\n          break;\n        case 'subpremise':\n          extractedObj.extra.subpremise = result.address_components[i].long_name;\n          break;\n        case 'establishment':\n          extractedObj.extra.establishment = result.address_components[i].long_name;\n          break;\n        case 'sublocality_level_1':\n        case 'political':\n        case 'sublocality':\n        case 'neighborhood':\n          if (!extractedObj.extra.neighborhood) {\n            extractedObj.extra.neighborhood = result.address_components[i].long_name;\n          }\n          break;\n      }\n    }\n  }\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  var params = this._prepareQueryString();\n  params.latlng = lat + ',' + lng;\n  if (query.language) {\n    params.language = query.language;\n  }\n  if (query.result_type) {\n    params.result_type = query.result_type;\n  }\n  if (query.location_type) {\n    params.location_type = query.location_type;\n  }\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {\n          raw: result\n        });\n      }\n      var results = [];\n      if (result.results.length > 0) {\n        results.push(_this._formatResult(result.results[0]));\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nGoogleGeocoder.prototype._encodeSpecialChars = function (value) {\n  if (typeof value === 'string') {\n    return value.replace(/\\u001a/g, ' ');\n  }\n  return value;\n};\nmodule.exports = GoogleGeocoder;","map":{"version":3,"names":["crypto","require","url","util","AbstractGeocoder","GoogleGeocoder","httpAdapter","options","super_","call","clientId","apiKey","Error","supportsHttps","inherits","prototype","_endpoint","_geocode","value","callback","_this","params","_prepareQueryString","address","components","country","zipcode","_encodeSpecialChars","googlePlaceId","place_id","language","region","excludePartialMatches","_signedRequest","get","err","result","results","status","raw","error_message","i","length","currentResult","partial_match","push","_formatResult","sensor","client","key","channel","endpoint","request","parse","fullRequestPath","path","format","query","decodedKey","Buffer","from","replace","hmac","createHmac","update","signature","digest","googleConfidenceLookup","ROOFTOP","RANGE_INTERPOLATED","GEOMETRIC_CENTER","APPROXIMATE","extractedObj","formattedAddress","formatted_address","latitude","geometry","location","lat","longitude","lng","extra","confidence","location_type","premise","subpremise","neighborhood","establishment","administrativeLevels","address_components","x","types","addressType","long_name","countryCode","short_name","level1long","level1short","level2long","level2short","level3long","level3short","level4long","level4short","level5long","level5short","city","streetName","streetNumber","_reverse","lon","latlng","result_type","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js"],"sourcesContent":["'use strict';\n\nvar crypto = require('crypto');\nvar url = require('url');\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey, region, excludePartialMatches)\n */\nvar GoogleGeocoder = function GoogleGeocoder(httpAdapter, options) {\n  this.options = [\n    'language',\n    'apiKey',\n    'clientId',\n    'region',\n    'excludePartialMatches',\n    'channel'\n  ];\n\n  GoogleGeocoder.super_.call(this, httpAdapter, options);\n\n  if (this.options.clientId && !this.options.apiKey) {\n    throw new Error('You must specify a apiKey (privateKey)');\n  }\n\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n};\n\nutil.inherits(GoogleGeocoder, AbstractGeocoder);\n\n// Google geocoding API endpoint\nGoogleGeocoder.prototype._endpoint =\n  'https://maps.googleapis.com/maps/api/geocode/json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  if (value.address) {\n    var components = '';\n\n    if (value.country) {\n      components = 'country:' + value.country;\n    }\n\n    if (value.zipcode) {\n      if (components) {\n        components += '|';\n      }\n      components += 'postal_code:' + value.zipcode;\n    }\n\n    params.components = this._encodeSpecialChars(components);\n    params.address = this._encodeSpecialChars(value.address);\n  } else if (value.googlePlaceId) {\n    params.place_id = value.googlePlaceId;\n  } else {\n    params.address = this._encodeSpecialChars(value);\n  }\n\n  if (value.language) {\n    params.language = value.language;\n  }\n\n  if (value.region) {\n    params.region = value.region;\n  }\n\n  var excludePartialMatches = params.excludePartialMatches;\n  delete params.excludePartialMatches;\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status === 'ZERO_RESULTS') {\n        results.raw = result;\n        return callback(false, results);\n      }\n\n      if (result.status !== 'OK') {\n        return callback(\n          new Error(\n            'Status is ' +\n              result.status +\n              '.' +\n              (result.error_message ? ' ' + result.error_message : '')\n          ),\n          { raw: result }\n        );\n      }\n\n      for (var i = 0; i < result.results.length; i++) {\n        var currentResult = result.results[i];\n\n        if (\n          excludePartialMatches &&\n          excludePartialMatches === true &&\n          typeof currentResult.partial_match !== 'undefined' &&\n          currentResult.partial_match === true\n        ) {\n          continue;\n        }\n\n        results.push(_this._formatResult(currentResult));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nGoogleGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    sensor: false\n  };\n\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n\n  if (this.options.region) {\n    params.region = this.options.region;\n  }\n\n  if (this.options.clientId) {\n    params.client = this.options.clientId;\n  } else if (this.options.apiKey) {\n    params.key = this.options.apiKey;\n  }\n\n  if (this.options.channel) {\n    params.channel = this.options.channel;\n  }\n\n  if (\n    this.options.excludePartialMatches &&\n    this.options.excludePartialMatches === true\n  ) {\n    params.excludePartialMatches = true;\n  }\n\n  return params;\n};\n\nGoogleGeocoder.prototype._signedRequest = function (endpoint, params) {\n  if (this.options.clientId) {\n    var request = url.parse(endpoint);\n    var fullRequestPath = request.path + url.format({ query: params });\n\n    var decodedKey = Buffer.from(\n      this.options.apiKey.replace('-', '+').replace('_', '/'),\n      'base64'\n    );\n    var hmac = crypto.createHmac('sha1', decodedKey);\n    hmac.update(fullRequestPath);\n    var signature = hmac.digest('base64');\n\n    signature = signature.replace(/\\+/g, '-').replace(/\\//g, '_');\n\n    params.signature = signature;\n  }\n\n  return params;\n};\n\nGoogleGeocoder.prototype._formatResult = function (result) {\n  var googleConfidenceLookup = {\n    ROOFTOP: 1,\n    RANGE_INTERPOLATED: 0.9,\n    GEOMETRIC_CENTER: 0.7,\n    APPROXIMATE: 0.5\n  };\n\n  var extractedObj = {\n    formattedAddress: result.formatted_address || null,\n    latitude: result.geometry.location.lat,\n    longitude: result.geometry.location.lng,\n    extra: {\n      googlePlaceId: result.place_id || null,\n      confidence: googleConfidenceLookup[result.geometry.location_type] || 0,\n      premise: null,\n      subpremise: null,\n      neighborhood: null,\n      establishment: null\n    },\n    administrativeLevels: {}\n  };\n\n  for (var i = 0; i < result.address_components.length; i++) {\n    for (var x = 0; x < result.address_components[i].types.length; x++) {\n      var addressType = result.address_components[i].types[x];\n      switch (addressType) {\n        //Country\n        case 'country':\n          extractedObj.country = result.address_components[i].long_name;\n          extractedObj.countryCode = result.address_components[i].short_name;\n          break;\n        //Administrative Level 1\n        case 'administrative_area_level_1':\n          extractedObj.administrativeLevels.level1long =\n            result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level1short =\n            result.address_components[i].short_name;\n          break;\n        //Administrative Level 2\n        case 'administrative_area_level_2':\n          extractedObj.administrativeLevels.level2long =\n            result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level2short =\n            result.address_components[i].short_name;\n          break;\n        //Administrative Level 3\n        case 'administrative_area_level_3':\n          extractedObj.administrativeLevels.level3long =\n            result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level3short =\n            result.address_components[i].short_name;\n          break;\n        //Administrative Level 4\n        case 'administrative_area_level_4':\n          extractedObj.administrativeLevels.level4long =\n            result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level4short =\n            result.address_components[i].short_name;\n          break;\n        //Administrative Level 5\n        case 'administrative_area_level_5':\n          extractedObj.administrativeLevels.level5long =\n            result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level5short =\n            result.address_components[i].short_name;\n          break;\n        // City\n        case 'locality':\n        case 'postal_town':\n          extractedObj.city = result.address_components[i].long_name;\n          break;\n        // Address\n        case 'postal_code':\n          extractedObj.zipcode = result.address_components[i].long_name;\n          break;\n        case 'route':\n          extractedObj.streetName = result.address_components[i].long_name;\n          break;\n        case 'street_number':\n          extractedObj.streetNumber = result.address_components[i].long_name;\n          break;\n        case 'premise':\n          extractedObj.extra.premise = result.address_components[i].long_name;\n          break;\n        case 'subpremise':\n          extractedObj.extra.subpremise =\n            result.address_components[i].long_name;\n          break;\n        case 'establishment':\n          extractedObj.extra.establishment =\n            result.address_components[i].long_name;\n          break;\n        case 'sublocality_level_1':\n        case 'political':\n        case 'sublocality':\n        case 'neighborhood':\n          if (!extractedObj.extra.neighborhood) {\n            extractedObj.extra.neighborhood =\n              result.address_components[i].long_name;\n          }\n          break;\n      }\n    }\n  }\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  params.latlng = lat + ',' + lng;\n\n  if (query.language) {\n    params.language = query.language;\n  }\n\n  if (query.result_type) {\n    params.result_type = query.result_type;\n  }\n\n  if (query.location_type) {\n    params.location_type = query.location_type;\n  }\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status !== 'OK') {\n        return callback(\n          new Error(\n            'Status is ' +\n              result.status +\n              '.' +\n              (result.error_message ? ' ' + result.error_message : '')\n          ),\n          { raw: result }\n        );\n      }\n\n      var results = [];\n\n      if (result.results.length > 0) {\n        results.push(_this._formatResult(result.results[0]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nGoogleGeocoder.prototype._encodeSpecialChars = function (value) {\n  if (typeof value === 'string') {\n    return value.replace(/\\u001a/g, ' ');\n  }\n\n  return value;\n};\n\nmodule.exports = GoogleGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}