{"ast":null,"code":"'use strict';\n\nvar util = require('util'),\n  net = require('net'),\n  AbstractGeocoder = require('./abstractgeocoder');\nvar ValueError = require('../error/valueerror.js');\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * APlaceGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, apiKey)\n */\nvar APlaceGeocoder = function (httpAdapter, options) {\n  this.supportIPv4 = false;\n  this.supportIPv6 = false;\n  this.supportAddress = true;\n  APlaceGeocoder.super_.call(this, httpAdapter);\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n  this.name = formatGeocoderName(this.constructor.name);\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n  if (options) {\n    for (var k in options) {\n      this.options[k] = options[k];\n    }\n  }\n  if (!this.options.language) {\n    this.options.language = 'en';\n  }\n  if (!this.options.apiKey) {\n    throw new Error('You must specify a apiKey (see https://aplace.io/en/documentation/general/authentication)');\n  }\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n  this.options = options;\n};\nutil.inherits(APlaceGeocoder, AbstractGeocoder);\n\n// APlace geocoding API endpoint\nAPlaceGeocoder.prototype._geocoderEndpoint = 'https://api.aplace.io/api/v1.0/search';\n\n// APlace reverse API endpoint\nAPlaceGeocoder.prototype._reverseEndpoint = 'https://api.aplace.io/api/v1.0/pip';\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.reverse = function (query, callback) {\n  return this._reverse(query, callback);\n};\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.geocode = function (value, callback) {\n  if (net.isIPv4(value) && (!this.supportIPv4 || this.supportIPv4 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv4');\n  }\n  if (net.isIPv6(value) && (!this.supportIPv6 || this.supportIPv6 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv6');\n  }\n  return this._geocode(value, callback);\n};\n\n/**\n * Batch Geocode\n * @param <string[]>   values    Valueas to geocode\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.batchGeocode = function (values, callback) {\n  Promise.all(values.map(value => new Promise(resolve => {\n    this.geocode(value, (error, value) => {\n      resolve({\n        error,\n        value\n      });\n    });\n  }))).then(data => callback(null, data));\n};\nAPlaceGeocoder.prototype._reverse = function (query, callback) {\n  try {\n    const that = this;\n    const lat = query.lat;\n    const lon = query.lon;\n    if (!lat || !lon) {\n      throw new ValueError('no valid lat or lon given');\n    }\n    const params = {\n      key: this.options.apiKey,\n      lat: lat,\n      lon: lon\n    };\n    this.httpAdapter.get(this._reverseEndpoint, params, function (err, response) {\n      if (err) {\n        return callback(err);\n      } else {\n        if (!response.session_id) {\n          return callback(new Error('Status is ' + response.status + '.' + (response.error_message ? ' ' + response.error_message : '')), {\n            raw: response\n          });\n        }\n        var results = [];\n        if (response.data && response.data.length > 0) {\n          results.push(that._formatResult(response.data[0]));\n        }\n        results.raw = response;\n        callback(false, results);\n      }\n    });\n  } catch (error) {\n    return callback(error);\n  }\n};\nAPlaceGeocoder.prototype._geocode = function (value, callback) {\n  try {\n    const that = this;\n    let query;\n    if (typeof value === 'string') {\n      query = value;\n    }\n    if (typeof value === 'object') {\n      const queryKeys = ['address', 'zip', 'city', 'country', 'countryCode'];\n      const queryParts = [];\n      for (const key in queryKeys) {\n        if (value[key] && value[key].length > 0) {\n          queryParts.push(value[key]);\n        }\n      }\n      query = queryParts.join(' ');\n    }\n    const params = {\n      key: this.options.apiKey,\n      q: query.trim(),\n      lang: this.options.language,\n      type: 'house_number'\n    };\n    const queryParams = ['type', 'lat', 'lon', 'radius', 'countries'];\n    for (const key in queryParams) {\n      if (value[queryParams[key]]) {\n        params[queryParams[key]] = value[queryParams[key]];\n      }\n    }\n    const validResultsTypes = ['house_number', 'road', 'quarter', 'city', 'county', 'state', 'region', 'country'];\n    if (params.type) {\n      if (typeof params.type === 'string') {\n        if (validResultsTypes.indexOf(params.type) === -1) {\n          throw new Error('type must be one of ' + validResultsTypes.join(', '));\n        }\n      }\n    }\n    for (const key in params) {\n      if (!params[key]) {\n        delete params[key];\n      }\n    }\n    this.httpAdapter.get(this._geocoderEndpoint, params, function (err, response) {\n      if (err) {\n        return callback(err);\n      } else {\n        if (!response.session_id) {\n          return callback(new Error('Status is ' + response.status + '.' + (response.error_message ? ' ' + response.error_message : '')), {\n            raw: response\n          });\n        }\n        var results = [];\n        if (response.data && response.data.length > 0) {\n          results.push(that._formatResult(response.data[0]));\n        }\n        results.raw = response;\n        callback(false, results);\n      }\n    });\n  } catch (error) {\n    return callback(error);\n  }\n};\nAPlaceGeocoder.prototype._formatResult = function (result) {\n  let formattedAddress = result.match;\n  if (result.match_details && result.match_details.length > 0) {\n    formattedAddress += ', ' + result.match_details;\n  }\n  var extractedObj = {\n    formattedAddress: formattedAddress || null,\n    latitude: result.lat,\n    longitude: result.lon,\n    extra: {},\n    administrativeLevels: {}\n  };\n  for (const key in result.address) {\n    switch (key) {\n      // Address\n      case 'postal_code':\n        extractedObj.zipcode = result.address.postcode;\n        break;\n      case 'road':\n        extractedObj.streetName = result.address.road;\n        break;\n      case 'street_number':\n        extractedObj.streetNumber = result.address.house_number;\n        break;\n      case 'country':\n        extractedObj.administrativeLevels.level1long = result.address.country;\n        extractedObj.administrativeLevels.level1short = result.address.country_code;\n        extractedObj.extra.country = result.address.country;\n        extractedObj.extra.countryCode = result.address.country_code;\n        break;\n      case 'region':\n        extractedObj.administrativeLevels.level2long = result.address.region;\n        extractedObj.administrativeLevels.level2short = result.address.region_code;\n        extractedObj.extra.region = result.address.region;\n        extractedObj.extra.regionCode = result.address.region_code;\n        break;\n      case 'state':\n        extractedObj.administrativeLevels.level3long = result.address.state;\n        extractedObj.administrativeLevels.level3short = result.address.state_code;\n        extractedObj.extra.state = result.address.state;\n        extractedObj.extra.stateCode = result.address.state_code;\n        break;\n      case 'county':\n        extractedObj.administrativeLevels.level4long = result.address.county;\n        extractedObj.extra.county = result.address.county;\n        break;\n      case 'city':\n        extractedObj.administrativeLevels.level5long = result.address.city;\n        break;\n      case 'quarter':\n        extractedObj.administrativeLevels.level6long = result.address.quarter;\n        extractedObj.extra.quarter = result.address.quarter;\n        extractedObj.neighbourhood = result.address.quarter;\n        break;\n    }\n  }\n  return extractedObj;\n};\nmodule.exports = APlaceGeocoder;","map":{"version":3,"names":["util","require","net","AbstractGeocoder","ValueError","formatGeocoderName","name","toLowerCase","replace","APlaceGeocoder","httpAdapter","options","supportIPv4","supportIPv6","supportAddress","super_","call","constructor","Error","k","language","apiKey","supportsHttps","inherits","prototype","_geocoderEndpoint","_reverseEndpoint","reverse","query","callback","_reverse","geocode","value","isIPv4","isIPv6","_geocode","batchGeocode","values","Promise","all","map","resolve","error","then","data","that","lat","lon","params","key","get","err","response","session_id","status","error_message","raw","results","length","push","_formatResult","queryKeys","queryParts","join","q","trim","lang","type","queryParams","validResultsTypes","indexOf","result","formattedAddress","match","match_details","extractedObj","latitude","longitude","extra","administrativeLevels","address","zipcode","postcode","streetName","road","streetNumber","house_number","level1long","country","level1short","country_code","countryCode","level2long","region","level2short","region_code","regionCode","level3long","state","level3short","state_code","stateCode","level4long","county","level5long","city","level6long","quarter","neighbourhood","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/aplacegeocoder.js"],"sourcesContent":["'use strict';\n\nvar util = require('util'),\n  net = require('net'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\nvar ValueError = require('../error/valueerror.js');\n\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * APlaceGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, apiKey)\n */\nvar APlaceGeocoder = function (httpAdapter, options) {\n  this.supportIPv4 = false;\n  this.supportIPv6 = false;\n  this.supportAddress = true;\n  APlaceGeocoder.super_.call(this, httpAdapter);\n\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n\n  this.name = formatGeocoderName(this.constructor.name);\n\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n\n  if (options) {\n    for (var k in options) {\n      this.options[k] = options[k];\n    }\n  }\n\n  if (!this.options.language) {\n    this.options.language = 'en';\n  }\n\n  if (!this.options.apiKey) {\n    throw new Error('You must specify a apiKey (see https://aplace.io/en/documentation/general/authentication)');\n  }\n\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n\n  this.options = options;\n};\n\nutil.inherits(APlaceGeocoder, AbstractGeocoder);\n\n// APlace geocoding API endpoint\nAPlaceGeocoder.prototype._geocoderEndpoint =\n  'https://api.aplace.io/api/v1.0/search';\n\n\n// APlace reverse API endpoint\nAPlaceGeocoder.prototype._reverseEndpoint =\n  'https://api.aplace.io/api/v1.0/pip';\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.reverse = function (query, callback) {\n  return this._reverse(query, callback);\n};\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.geocode = function (value, callback) {\n  if (\n    net.isIPv4(value) &&\n    (!this.supportIPv4 || this.supportIPv4 == 'undefined')\n  ) {\n    throw new ValueError(\n      this.constructor.name + ' does not support geocoding IPv4'\n    );\n  }\n\n  if (\n    net.isIPv6(value) &&\n    (!this.supportIPv6 || this.supportIPv6 == 'undefined')\n  ) {\n    throw new ValueError(\n      this.constructor.name + ' does not support geocoding IPv6'\n    );\n  }\n  return this._geocode(value, callback);\n};\n\n/**\n * Batch Geocode\n * @param <string[]>   values    Valueas to geocode\n * @param <function> callback Callback method\n */\nAPlaceGeocoder.prototype.batchGeocode = function (values, callback) {\n  Promise.all(\n    values.map(value =>\n      new Promise(resolve => {\n        this.geocode(value, (error, value) => {\n          resolve({\n            error,\n            value\n          });\n        });\n      })\n    )\n  )\n    .then(data => callback(null, data));\n};\n\nAPlaceGeocoder.prototype._reverse = function (query, callback) {\n  try {\n    const that = this;\n    const lat = query.lat;\n    const lon = query.lon;\n\n    if (!lat || !lon) {\n      throw new ValueError('no valid lat or lon given');\n    }\n\n    const params = {\n      key: this.options.apiKey,\n      lat: lat,\n      lon: lon\n    };\n\n    this.httpAdapter.get(this._reverseEndpoint, params, function (err, response) {\n      if (err) {\n        return callback(err);\n      } else {\n        if (!response.session_id) {\n          return callback(\n            new Error(\n              'Status is ' +\n              response.status +\n              '.' +\n              (response.error_message ? ' ' + response.error_message : '')\n            ),\n            { raw: response }\n          );\n        }\n        var results = [];\n\n        if (response.data && response.data.length > 0) {\n          results.push(that._formatResult(response.data[0]));\n        }\n        results.raw = response;\n        callback(false, results);\n      }\n    });\n  } catch (error) {\n    return callback(error);\n  }\n}\n\nAPlaceGeocoder.prototype._geocode = function (value, callback) {\n  try {\n    const that = this;\n    let query;\n\n    if (typeof value === 'string') {\n      query = value;\n    }\n    if (typeof value === 'object') {\n      const queryKeys = ['address', 'zip', 'city', 'country', 'countryCode'];\n      const queryParts = [];\n      for (const key in queryKeys) {\n        if (value[key] && value[key].length > 0) {\n          queryParts.push(value[key]);\n        }\n      }\n      query = queryParts.join(' ');\n    }\n    const params = {\n      key: this.options.apiKey,\n      q: query.trim(),\n      lang: this.options.language,\n      type: 'house_number'\n    };\n\n    const queryParams = ['type', 'lat', 'lon', 'radius', 'countries'];\n    for (const key in queryParams) {\n      if (value[queryParams[key]]) {\n        params[queryParams[key]] = value[queryParams[key]];\n      }\n    }\n\n    const validResultsTypes = ['house_number', 'road', 'quarter', 'city', 'county', 'state', 'region', 'country'];\n    if (params.type) {\n      if (typeof params.type === 'string') {\n        if (validResultsTypes.indexOf(params.type) === -1) {\n          throw new Error('type must be one of ' + validResultsTypes.join(', '));\n        }\n      }\n    }\n\n    for (const key in params) {\n      if (!params[key]) {\n        delete params[key];\n      }\n    }\n\n    this.httpAdapter.get(this._geocoderEndpoint, params, function (err, response) {\n      if (err) {\n        return callback(err);\n      } else {\n        if (!response.session_id) {\n          return callback(\n            new Error(\n              'Status is ' +\n              response.status +\n              '.' +\n              (response.error_message ? ' ' + response.error_message : '')\n            ),\n            { raw: response }\n          );\n        }\n        var results = [];\n\n        if (response.data && response.data.length > 0) {\n          results.push(that._formatResult(response.data[0]));\n        }\n        results.raw = response;\n        callback(false, results);\n      }\n    });\n  } catch (error) {\n    return callback(error);\n  }\n}\n\nAPlaceGeocoder.prototype._formatResult = function (result) {\n  let formattedAddress = result.match;\n  if (result.match_details && result.match_details.length > 0) {\n    formattedAddress += ', ' + result.match_details;\n  }\n  var extractedObj = {\n    formattedAddress: formattedAddress || null,\n    latitude: result.lat,\n    longitude: result.lon,\n    extra: {},\n    administrativeLevels: {}\n  };\n\n  for (const key in result.address) {\n    switch (key) {\n      // Address\n      case 'postal_code':\n        extractedObj.zipcode = result.address.postcode;\n        break;\n\n      case 'road':\n        extractedObj.streetName = result.address.road;\n        break;\n\n      case 'street_number':\n        extractedObj.streetNumber = result.address.house_number;\n        break;\n\n      case 'country':\n        extractedObj.administrativeLevels.level1long = result.address.country;\n        extractedObj.administrativeLevels.level1short = result.address.country_code;\n        extractedObj.extra.country = result.address.country;\n        extractedObj.extra.countryCode = result.address.country_code;\n        break;\n\n      case 'region':\n        extractedObj.administrativeLevels.level2long = result.address.region;\n        extractedObj.administrativeLevels.level2short = result.address.region_code;\n        extractedObj.extra.region = result.address.region;\n        extractedObj.extra.regionCode = result.address.region_code;\n        break;\n\n      case 'state':\n        extractedObj.administrativeLevels.level3long = result.address.state;\n        extractedObj.administrativeLevels.level3short = result.address.state_code;\n        extractedObj.extra.state = result.address.state;\n        extractedObj.extra.stateCode = result.address.state_code;\n        break;\n\n      case 'county':\n        extractedObj.administrativeLevels.level4long = result.address.county;\n        extractedObj.extra.county = result.address.county;\n        break;\n\n      case 'city':\n        extractedObj.administrativeLevels.level5long = result.address.city;\n        break;\n\n      case 'quarter':\n        extractedObj.administrativeLevels.level6long = result.address.quarter;\n        extractedObj.extra.quarter = result.address.quarter;\n        extractedObj.neighbourhood = result.address.quarter;\n        break;\n    }\n  }\n  return extractedObj;\n};\n\nmodule.exports = APlaceGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}