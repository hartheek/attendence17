{"ast":null,"code":"var util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar TeleportGeocoder = function TeleportGeocoder(httpAdapter, options) {\n  TeleportGeocoder.super_.call(this, httpAdapter, options);\n  var base = 'https://api.teleport.org/api';\n  this._cities_endpoint = base + '/cities/';\n  this._locations_endpoint = base + '/locations/';\n};\nutil.inherits(TeleportGeocoder, AbstractGeocoder);\nfunction getEmbeddedPath(parent, path) {\n  var elements = path.split('/');\n  for (var i in elements) {\n    var element = elements[i];\n    var embedded = parent._embedded;\n    if (!embedded) {\n      return undefined;\n    }\n    var child = embedded[element];\n    if (!child) {\n      return undefined;\n    }\n    parent = child;\n  }\n  return parent;\n}\n\n/**\n * Geocode\n *\n * @param <string>    value     Value to geocode (Address)\n * @param <function>  callback  Callback method\n */\nTeleportGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = {};\n  params.search = value;\n  params.embed = 'city:search-results/city:item/{city:country,city:admin1_division,city:urban_area}';\n  this.httpAdapter.get(this._cities_endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'city:search-results') || [];\n        for (var i in searchResults) {\n          var confidence = (25 - i) / 25.0 * 10;\n          results.push(_this._formatResult(searchResults[i], 'city:item', confidence));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nTeleportGeocoder.prototype._formatResult = function (result, cityRelationName, confidence) {\n  var city = getEmbeddedPath(result, cityRelationName);\n  var admin1 = getEmbeddedPath(city, 'city:admin1_division') || {};\n  var country = getEmbeddedPath(city, 'city:country') || {};\n  var urban_area = getEmbeddedPath(city, 'city:urban_area') || {};\n  var urban_area_links = urban_area._links || {};\n  var extra = {\n    confidence: confidence,\n    urban_area: urban_area.name,\n    urban_area_api_url: (urban_area_links.self || {}).href,\n    urban_area_web_url: urban_area.teleport_city_url\n  };\n  if (result.distance_km) {\n    extra.distance_km = result.distance_km;\n  }\n  if (result.matching_full_name) {\n    extra.matching_full_name = result.matching_full_name;\n  }\n  return {\n    'latitude': city.location.latlon.latitude,\n    'longitude': city.location.latlon.longitude,\n    'city': city.name,\n    'country': country.name,\n    'countryCode': country.iso_alpha2,\n    'state': admin1.name,\n    'stateCode': admin1.geonames_admin1_code,\n    'extra': extra\n  };\n};\n\n/**\n * Reverse geocoding\n *\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback          Callback method\n */\nTeleportGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var suffix = lat + ',' + lng;\n  var _this = this;\n  var params = {};\n  params.embed = 'location:nearest-cities/location:nearest-city/{city:country,city:admin1_division,city:urban_area}';\n  this.httpAdapter.get(this._locations_endpoint + suffix, params, function (err, result) {\n    if (err) {\n      throw err;\n    } else {\n      var results = [];\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'location:nearest-cities') || [];\n        for (var i in searchResults) {\n          var searchResult = searchResults[i];\n          var confidence = Math.max(0, 25 - searchResult.distance_km) / 25 * 10;\n          results.push(_this._formatResult(searchResult, 'location:nearest-city', confidence));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nmodule.exports = TeleportGeocoder;","map":{"version":3,"names":["util","require","AbstractGeocoder","TeleportGeocoder","httpAdapter","options","super_","call","base","_cities_endpoint","_locations_endpoint","inherits","getEmbeddedPath","parent","path","elements","split","i","element","embedded","_embedded","undefined","child","prototype","_geocode","value","callback","_this","params","search","embed","get","err","result","results","searchResults","confidence","push","_formatResult","raw","cityRelationName","city","admin1","country","urban_area","urban_area_links","_links","extra","name","urban_area_api_url","self","href","urban_area_web_url","teleport_city_url","distance_km","matching_full_name","location","latlon","latitude","longitude","iso_alpha2","geonames_admin1_code","_reverse","query","lat","lng","lon","suffix","searchResult","Math","max","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js"],"sourcesContent":["var util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar TeleportGeocoder = function TeleportGeocoder(httpAdapter, options) {\n  TeleportGeocoder.super_.call(this, httpAdapter, options);\n\n  var base = 'https://api.teleport.org/api';\n  this._cities_endpoint = base + '/cities/';\n  this._locations_endpoint = base + '/locations/';\n};\n\nutil.inherits(TeleportGeocoder, AbstractGeocoder);\n\nfunction getEmbeddedPath(parent, path) {\n  var elements = path.split('/');\n  for ( var i in elements) {\n    var element = elements[i];\n    var embedded = parent._embedded;\n    if (!embedded) {\n      return undefined;\n    }\n    var child = embedded[element];\n    if (!child) {\n      return undefined;\n    }\n    parent = child;\n  }\n  return parent;\n}\n\n/**\n * Geocode\n *\n * @param <string>    value     Value to geocode (Address)\n * @param <function>  callback  Callback method\n */\nTeleportGeocoder.prototype._geocode = function(value, callback) {\n  var _this = this;\n\n  var params = {};\n  params.search = value;\n  params.embed = 'city:search-results/city:item/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._cities_endpoint, params, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'city:search-results') || [];\n        for (var i in searchResults) {\n          var confidence = (25 - i) / 25.0 * 10;\n          results.push(_this._formatResult(searchResults[i], 'city:item', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nTeleportGeocoder.prototype._formatResult = function(result, cityRelationName, confidence) {\n  var city = getEmbeddedPath(result, cityRelationName);\n  var admin1 = getEmbeddedPath(city, 'city:admin1_division') || {};\n  var country = getEmbeddedPath(city, 'city:country') || {};\n  var urban_area = getEmbeddedPath(city, 'city:urban_area') || {};\n  var urban_area_links = urban_area._links || {};\n  var extra = {\n    confidence: confidence,\n    urban_area: urban_area.name,\n    urban_area_api_url: (urban_area_links.self || {}).href,\n    urban_area_web_url: urban_area.teleport_city_url\n  };\n  if (result.distance_km) {\n    extra.distance_km = result.distance_km;\n  }\n  if (result.matching_full_name) {\n    extra.matching_full_name = result.matching_full_name;\n  }\n\n  return {\n    'latitude': city.location.latlon.latitude,\n    'longitude': city.location.latlon.longitude,\n    'city': city.name,\n    'country': country.name,\n    'countryCode': country.iso_alpha2,\n    'state': admin1.name,\n    'stateCode': admin1.geonames_admin1_code,\n    'extra': extra\n  };\n};\n\n/**\n * Reverse geocoding\n *\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback          Callback method\n */\nTeleportGeocoder.prototype._reverse = function(query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var suffix = lat + ',' + lng;\n\n  var _this = this;\n\n  var params = {};\n  params.embed = 'location:nearest-cities/location:nearest-city/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._locations_endpoint + suffix, params, function(err, result) {\n    if (err) {\n      throw err;\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'location:nearest-cities') || [];\n        for ( var i in searchResults) {\n          var searchResult = searchResults[i];\n          var confidence = Math.max(0, 25 - searchResult.distance_km) / 25 * 10;\n          results.push(_this._formatResult(searchResult, 'location:nearest-city', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = TeleportGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}