{"ast":null,"code":"var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapzenGeocoder = function MapzenGeocoder(httpAdapter, apiKey) {\n  MapzenGeocoder.super_.call(this, httpAdapter);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n  this.apiKey = apiKey;\n  this._endpoint = 'https://search.mapzen.com/v1';\n};\nutil.inherits(MapzenGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nMapzenGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/search', {\n    'text': value,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (result.error) {\n      return callback(new Error('Status is ' + result.error), {\n        raw: result\n      });\n    }\n    var results = [];\n    var locations = result.features;\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n    results.raw = result;\n    callback(false, results);\n  });\n};\nMapzenGeocoder.prototype._formatResult = function (result) {\n  var accuracy = result.properties.confidence < 1 ? result.properties.confidence - 0.1 : 1;\n  return {\n    'latitude': result.geometry.coordinates[1],\n    'longitude': result.geometry.coordinates[0],\n    'country': result.properties.country,\n    'city': result.properties.locality,\n    'state': result.properties.region,\n    'zipcode': null,\n    'streetName': result.properties.street,\n    'streetNumber': result.properties.housenumber,\n    'countryCode': result.properties.country_a,\n    'extra': {\n      confidence: accuracy || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nMapzenGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'point.lat': lat,\n    'point.lon': lng,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    var results = [];\n    var locations = result.results;\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n    results.raw = result;\n    callback(false, results);\n  });\n};\nmodule.exports = MapzenGeocoder;","map":{"version":3,"names":["querystring","require","util","AbstractGeocoder","MapzenGeocoder","httpAdapter","apiKey","super_","call","Error","constructor","name","_endpoint","inherits","prototype","_geocode","value","callback","_this","get","unescape","err","result","error","raw","results","locations","features","i","length","push","_formatResult","accuracy","properties","confidence","geometry","coordinates","country","locality","region","street","housenumber","country_a","_reverse","query","lat","lng","lon","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/mapzengeocoder.js"],"sourcesContent":["var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar MapzenGeocoder = function MapzenGeocoder(httpAdapter, apiKey) {\n\n  MapzenGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'https://search.mapzen.com/v1';\n};\n\nutil.inherits(MapzenGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nMapzenGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/search', {\n    'text': value,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (result.error) {\n      return callback(new Error('Status is ' + result.error), {raw: result});\n    }\n\n    var results = [];\n\n    var locations = result.features;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nMapzenGeocoder.prototype._formatResult = function (result) {\n  var accuracy = (result.properties.confidence < 1) ? result.properties.confidence - 0.1 : 1;\n\n  return {\n    'latitude': result.geometry.coordinates[1],\n    'longitude': result.geometry.coordinates[0],\n    'country': result.properties.country,\n    'city': result.properties.locality,\n    'state': result.properties.region,\n    'zipcode': null,\n    'streetName': result.properties.street,\n    'streetNumber': result.properties.housenumber,\n    'countryCode': result.properties.country_a,\n    'extra': {\n      confidence: accuracy || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nMapzenGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'point.lat': lat,\n    'point.lon': lng,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    var results = [];\n    var locations = result.results;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nmodule.exports = MapzenGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}