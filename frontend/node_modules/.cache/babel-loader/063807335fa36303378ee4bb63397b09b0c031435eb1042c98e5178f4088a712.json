{"ast":null,"code":"var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar OpendataFranceGeocoder = function OpendataFranceGeocoder(httpAdapter, options) {\n  this.options = ['language', 'email', 'apiKey'];\n  OpendataFranceGeocoder.super_.call(this, httpAdapter, options);\n};\nutil.inherits(OpendataFranceGeocoder, AbstractGeocoder);\nOpendataFranceGeocoder.prototype._endpoint = 'https://api-adresse.data.gouv.fr/search';\nOpendataFranceGeocoder.prototype._endpoint_reverse = 'https://api-adresse.data.gouv.fr/reverse';\n\n/**\n* Geocode\n* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://opendatafrance/api/)\n* @param <function> callback Callback method\n*/\nOpendataFranceGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  var params = this._getCommonParams();\n  if (typeof value == 'string') {\n    params.q = value;\n  } else {\n    if (value.address) {\n      params.q = value.address;\n    }\n    if (value.lat && value.lon) {\n      params.lat = value.lat;\n      params.lon = value.lon;\n    }\n    if (value.zipcode) {\n      params.postcode = value.zipcode;\n    }\n    if (value.type) {\n      params.type = value.type;\n    }\n    if (value.citycode) {\n      params.citycode = value.citycode;\n    }\n    if (value.limit) {\n      params.limit = value.limit;\n    }\n  }\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.error) {\n        return callback(new Error(result.error));\n      }\n      var results = [];\n      if (result.features) {\n        for (var i = 0; i < result.features.length; i++) {\n          results.push(_this._formatResult(result.features[i]));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\nOpendataFranceGeocoder.prototype._formatResult = function (result) {\n  var latitude = result.geometry.coordinates[1];\n  if (latitude) {\n    latitude = parseFloat(latitude);\n  }\n  var longitude = result.geometry.coordinates[0];\n  if (longitude) {\n    longitude = parseFloat(longitude);\n  }\n  var properties = result.properties;\n  var formatedResult = {\n    latitude: latitude,\n    longitude: longitude,\n    state: properties.context,\n    city: properties.city,\n    zipcode: properties.postcode,\n    citycode: properties.citycode,\n    countryCode: 'FR',\n    country: 'France',\n    type: properties.type,\n    id: properties.id\n  };\n  if (properties.type === 'housenumber') {\n    formatedResult.streetName = properties.street;\n    formatedResult.streetNumber = properties.housenumber;\n  } else if (properties.type === 'street') {\n    formatedResult.streetName = properties.name;\n  } else if (properties.type === 'city') {\n    formatedResult.population = properties.population;\n    formatedResult.adm_weight = properties.adm_weight;\n  } else if (properties.type === 'village') {\n    formatedResult.population = properties.population;\n  } else if (properties.type === 'locality') {\n    formatedResult.streetName = properties.name;\n  }\n  return formatedResult;\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2\n* @param <function> callback Callback method\n*/\nOpendataFranceGeocoder.prototype._reverse = function (query, callback) {\n  var _this = this;\n  var params = this._getCommonParams();\n  for (var k in query) {\n    var v = query[k];\n    params[k] = v;\n  }\n  this.httpAdapter.get(this._endpoint_reverse, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      if (result.error) {\n        return callback(new Error(result.error));\n      }\n      var results = [];\n      if (result.features) {\n        for (var i = 0; i < result.features.length; i++) {\n          results.push(_this._formatResult(result.features[i]));\n        }\n      }\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nOpendataFranceGeocoder.prototype._getCommonParams = function () {\n  var params = {};\n  for (var k in this.options) {\n    var v = this.options[k];\n    if (!v) {\n      continue;\n    }\n    if (k === 'language') {\n      k = 'accept-language';\n    }\n    params[k] = v;\n  }\n  return params;\n};\nmodule.exports = OpendataFranceGeocoder;","map":{"version":3,"names":["util","require","AbstractGeocoder","OpendataFranceGeocoder","httpAdapter","options","super_","call","inherits","prototype","_endpoint","_endpoint_reverse","_geocode","value","callback","_this","params","_getCommonParams","q","address","lat","lon","zipcode","postcode","type","citycode","limit","get","err","result","error","Error","results","features","i","length","push","_formatResult","raw","latitude","geometry","coordinates","parseFloat","longitude","properties","formatedResult","state","context","city","countryCode","country","id","streetName","street","streetNumber","housenumber","name","population","adm_weight","_reverse","query","k","v","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/opendatafrancegeocoder.js"],"sourcesContent":["var util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar OpendataFranceGeocoder = function OpendataFranceGeocoder(httpAdapter, options) {\n    this.options = ['language','email','apiKey'];\n\n    OpendataFranceGeocoder.super_.call(this, httpAdapter, options);\n};\n\nutil.inherits(OpendataFranceGeocoder, AbstractGeocoder);\n\nOpendataFranceGeocoder.prototype._endpoint = 'https://api-adresse.data.gouv.fr/search';\n\nOpendataFranceGeocoder.prototype._endpoint_reverse = 'https://api-adresse.data.gouv.fr/reverse';\n\n/**\n* Geocode\n* @param <string|object>   value    Value to geocode (Address or parameters, as specified at https://opendatafrance/api/)\n* @param <function> callback Callback method\n*/\nOpendataFranceGeocoder.prototype._geocode = function(value, callback) {\n    var _this = this;\n\n    var params = this._getCommonParams();\n\n    if (typeof value == 'string') {\n      params.q = value;\n    } else {\n      if (value.address) {\n        params.q = value.address;\n      }\n      if (value.lat && value.lon) {\n        params.lat = value.lat;\n        params.lon = value.lon;\n      }\n      if (value.zipcode) {\n        params.postcode = value.zipcode;\n      }\n      if (value.type) {\n        params.type = value.type;\n      }\n      if (value.citycode) {\n        params.citycode = value.citycode;\n      }\n      if (value.limit) {\n        params.limit = value.limit;\n      }\n    }\n\n    this.httpAdapter.get(this._endpoint, params, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n\n            if (result.error) {\n              return callback(new Error(result.error));\n            }\n\n            var results = [];\n\n            if (result.features) {\n              for (var i = 0; i < result.features.length; i++) {\n                results.push(_this._formatResult(result.features[i]));\n              }\n            }\n\n            results.raw = result;\n            callback(false, results);\n        }\n\n    });\n\n};\n\nOpendataFranceGeocoder.prototype._formatResult = function(result) {\n\n    var latitude = result.geometry.coordinates[1];\n    if (latitude) {\n      latitude = parseFloat(latitude);\n    }\n\n    var longitude = result.geometry.coordinates[0];\n    if (longitude) {\n      longitude = parseFloat(longitude);\n    }\n\n    var properties = result.properties;\n\n    var formatedResult = {\n        latitude : latitude,\n        longitude : longitude,\n        state : properties.context,\n        city : properties.city,\n        zipcode : properties.postcode,\n        citycode : properties.citycode,\n        countryCode : 'FR',\n        country : 'France',\n        type: properties.type,\n        id: properties.id\n    };\n\n    if (properties.type === 'housenumber') {\n      formatedResult.streetName = properties.street;\n      formatedResult.streetNumber = properties.housenumber;\n    } else if (properties.type === 'street') {\n      formatedResult.streetName = properties.name;\n    } else if (properties.type === 'city') {\n      formatedResult.population = properties.population;\n      formatedResult.adm_weight = properties.adm_weight;\n    } else if (properties.type === 'village') {\n      formatedResult.population = properties.population;\n    } else if (properties.type === 'locality') {\n      formatedResult.streetName = properties.name;\n    }\n\n    return formatedResult;\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>, ...}  lat: Latitude, lon: Longitude, ... see https://wiki.openstreetmap.org/wiki/Nominatim#Parameters_2\n* @param <function> callback Callback method\n*/\nOpendataFranceGeocoder.prototype._reverse = function(query, callback) {\n\n    var _this = this;\n\n    var params = this._getCommonParams();\n    for (var k in query) {\n      var v = query[k];\n      params[k] = v;\n    }\n\n    this.httpAdapter.get(this._endpoint_reverse , params, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n\n          if(result.error) {\n            return callback(new Error(result.error));\n          }\n\n          var results = [];\n\n          if (result.features) {\n            for (var i = 0; i < result.features.length; i++) {\n              results.push(_this._formatResult(result.features[i]));\n            }\n          }\n\n          results.raw = result;\n          callback(false, results);\n        }\n    });\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nOpendataFranceGeocoder.prototype._getCommonParams = function(){\n    var params = {};\n\n    for (var k in this.options) {\n      var v = this.options[k];\n      if (!v) {\n        continue;\n      }\n      if (k === 'language') {\n        k = 'accept-language';\n      }\n      params[k] = v;\n    }\n\n    return params;\n};\n\nmodule.exports = OpendataFranceGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}