{"ast":null,"code":"var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n *\n * Geocoder for LocationIQ\n * http://locationiq.org/#docs\n *\n * @param {[type]} httpAdapter [description]\n * @param {String} apiKey      [description]\n */\nvar LocationIQGeocoder = function LocationIQGeocoder(httpAdapter, apiKey) {\n  LocationIQGeocoder.super_.call(this, httpAdapter);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error('LocationIQGeocoder needs an apiKey');\n  }\n  this.apiKey = querystring.unescape(apiKey);\n};\nutil.inherits(LocationIQGeocoder, AbstractGeocoder);\nLocationIQGeocoder.prototype._endpoint = 'http://us1.locationiq.com/v1';\n\n/**\n * Geocode\n * @param  {string|object}   value\n *   Value to geocode (Adress String or parameters as specified over at\n *   http://locationiq.org/#docs)\n * @param  {Function} callback callback method\n */\nLocationIQGeocoder.prototype._geocode = function (value, callback) {\n  var params = this._getCommonParams();\n  if (typeof value === 'string') {\n    params.q = value;\n  } else {\n    for (var k in value) {\n      var v = value[k];\n      switch (k) {\n        default:\n          params[k] = v;\n          break;\n        // alias for postalcode\n        case 'zipcode':\n          params.postalcode = v;\n          break;\n        // alias for street\n        case 'address':\n          params.street = v;\n          break;\n      }\n    }\n  }\n  this._forceParams(params);\n  this.httpAdapter.get(this._endpoint + '/search', params, function (err, responseData) {\n    if (err) {\n      return callback(err);\n    }\n\n    // when there’s no err thrown here the resulting array object always\n    // seemes to be defined but empty so no need to check for\n    // responseData.error for now\n    // add check if the array is not empty, as it returns an empty array from time to time\n    var results = [];\n    if (responseData.length && responseData.length > 0) {\n      results = responseData.map(this._formatResult).filter(function (result) {\n        return result.longitude && result.latitude;\n      });\n      results.raw = responseData;\n    }\n    callback(false, results);\n  }.bind(this));\n};\n\n/**\n * Reverse geocoding\n * @param  {lat:<number>,lon<number>}   query    lat: Latitude, lon: Longitutde and additional parameters as specified here: http://locationiq.org/#docs\n * @param  {Function} callback Callback method\n */\nLocationIQGeocoder.prototype._reverse = function (query, callback) {\n  var params = this._getCommonParams();\n  for (var k in query) {\n    var v = query[k];\n    params[k] = v;\n  }\n  this._forceParams(params);\n  this.httpAdapter.get(this._endpoint + '/reverse', params, function (err, responseData) {\n    if (err) {\n      return callback(err);\n    }\n\n    // when there’s no err thrown here the resulting array object always\n    // seemes to be defined but empty so no need to check for\n    // responseData.error for now\n\n    // locationiq always seemes to answer with a single object instead\n    // of an array\n    var results = [responseData].map(this._formatResult).filter(function (result) {\n      return result.longitude && result.latitude;\n    });\n    results.raw = responseData;\n    callback(false, results);\n  }.bind(this));\n};\nLocationIQGeocoder.prototype._formatResult = function (result) {\n  // transform lat and lon to real floats\n  var transformedResult = {\n    'latitude': result.lat ? parseFloat(result.lat) : undefined,\n    'longitude': result.lon ? parseFloat(result.lon) : undefined\n  };\n  if (result.address) {\n    transformedResult.country = result.address.country;\n    transformedResult.country = result.address.country;\n    transformedResult.city = result.address.city || result.address.town || result.address.village || result.address.hamlet;\n    transformedResult.state = result.address.state;\n    transformedResult.zipcode = result.address.postcode;\n    transformedResult.streetName = result.address.road || result.address.cycleway;\n    transformedResult.streetNumber = result.address.house_number;\n\n    // make sure countrycode is always uppercase to keep node-geocoder api formats\n    var countryCode = result.address.country_code;\n    if (countryCode) {\n      countryCode = countryCode.toUpperCase();\n    }\n    transformedResult.countryCode = countryCode;\n  }\n  return transformedResult;\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nLocationIQGeocoder.prototype._getCommonParams = function () {\n  return {\n    'key': this.apiKey\n  };\n};\n\n/**\n * Adds parameters that are enforced\n *\n * @param  {object} params object containing the parameters\n */\nLocationIQGeocoder.prototype._forceParams = function (params) {\n  params.format = 'json';\n  params.addressdetails = '1';\n};\nmodule.exports = LocationIQGeocoder;","map":{"version":3,"names":["querystring","require","util","AbstractGeocoder","LocationIQGeocoder","httpAdapter","apiKey","super_","call","Error","unescape","inherits","prototype","_endpoint","_geocode","value","callback","params","_getCommonParams","q","k","v","postalcode","street","_forceParams","get","err","responseData","results","length","map","_formatResult","filter","result","longitude","latitude","raw","bind","_reverse","query","transformedResult","lat","parseFloat","undefined","lon","address","country","city","town","village","hamlet","state","zipcode","postcode","streetName","road","cycleway","streetNumber","house_number","countryCode","country_code","toUpperCase","format","addressdetails","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/locationiqgeocoder.js"],"sourcesContent":["var\n  querystring      = require('querystring'),\n  util             = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n *\n * Geocoder for LocationIQ\n * http://locationiq.org/#docs\n *\n * @param {[type]} httpAdapter [description]\n * @param {String} apiKey      [description]\n */\nvar LocationIQGeocoder = function LocationIQGeocoder(httpAdapter, apiKey) {\n\n  LocationIQGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error('LocationIQGeocoder needs an apiKey');\n  }\n\n  this.apiKey = querystring.unescape(apiKey);\n};\n\nutil.inherits(LocationIQGeocoder, AbstractGeocoder);\n\nLocationIQGeocoder.prototype._endpoint = 'http://us1.locationiq.com/v1';\n\n/**\n * Geocode\n * @param  {string|object}   value\n *   Value to geocode (Adress String or parameters as specified over at\n *   http://locationiq.org/#docs)\n * @param  {Function} callback callback method\n */\nLocationIQGeocoder.prototype._geocode = function(value, callback) {\n  var params = this._getCommonParams();\n\n  if (typeof value === 'string') {\n    params.q = value;\n  } else {\n    for (var k in value) {\n      var v = value[k];\n      switch(k) {\n        default:\n          params[k] = v;\n          break;\n        // alias for postalcode\n        case 'zipcode':\n          params.postalcode = v;\n          break;\n        // alias for street\n        case 'address':\n          params.street = v;\n          break;\n      }\n    }\n  }\n  this._forceParams(params);\n\n  this.httpAdapter.get(this._endpoint + '/search', params,\n    function(err, responseData) {\n      if (err) {\n        return callback(err);\n      }\n\n      // when there’s no err thrown here the resulting array object always\n      // seemes to be defined but empty so no need to check for\n      // responseData.error for now\n      // add check if the array is not empty, as it returns an empty array from time to time\n      var results = [];\n      if (responseData.length && responseData.length > 0) {\n        results = responseData.map(this._formatResult).filter(function(result) {\n          return result.longitude && result.latitude;\n        });\n        results.raw = responseData;\n      }\n\n      callback(false, results);\n    }.bind(this));\n};\n\n/**\n * Reverse geocoding\n * @param  {lat:<number>,lon<number>}   query    lat: Latitude, lon: Longitutde and additional parameters as specified here: http://locationiq.org/#docs\n * @param  {Function} callback Callback method\n */\nLocationIQGeocoder.prototype._reverse = function(query, callback) {\n  var params = this._getCommonParams();\n\n  for (var k in query) {\n    var v = query[k];\n    params[k] = v;\n  }\n  this._forceParams(params);\n\n  this.httpAdapter.get(this._endpoint + '/reverse', params,\n    function(err, responseData) {\n      if (err) {\n        return callback(err);\n      }\n\n      // when there’s no err thrown here the resulting array object always\n      // seemes to be defined but empty so no need to check for\n      // responseData.error for now\n\n      // locationiq always seemes to answer with a single object instead\n      // of an array\n      var results = [responseData].map(this._formatResult).filter(function(result) {\n        return result.longitude && result.latitude;\n      });\n      results.raw = responseData;\n\n      callback(false, results);\n    }.bind(this));\n};\n\nLocationIQGeocoder.prototype._formatResult = function(result) {\n  // transform lat and lon to real floats\n  var transformedResult = {\n    'latitude' : result.lat ? parseFloat(result.lat) : undefined,\n    'longitude' : result.lon ? parseFloat(result.lon) : undefined\n  };\n\n  if (result.address) {\n    transformedResult.country = result.address.country;\n    transformedResult.country = result.address.country;\n    transformedResult.city = result.address.city || result.address.town || result.address.village || result.address.hamlet;\n    transformedResult.state = result.address.state;\n    transformedResult.zipcode = result.address.postcode;\n    transformedResult.streetName = result.address.road || result.address.cycleway;\n    transformedResult.streetNumber = result.address.house_number;\n    \n    // make sure countrycode is always uppercase to keep node-geocoder api formats\n    var countryCode = result.address.country_code;\n    if (countryCode) {\n        countryCode = countryCode.toUpperCase();\n    }\n    \n    transformedResult.countryCode = countryCode;\n  }\n  return transformedResult;\n};\n\n/**\n* Prepare common params\n*\n* @return <Object> common params\n*/\nLocationIQGeocoder.prototype._getCommonParams = function() {\n  return {\n    'key': this.apiKey\n  };\n};\n\n/**\n * Adds parameters that are enforced\n *\n * @param  {object} params object containing the parameters\n */\nLocationIQGeocoder.prototype._forceParams = function(params) {\n  params.format = 'json';\n  params.addressdetails = '1';\n};\n\n\nmodule.exports = LocationIQGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}