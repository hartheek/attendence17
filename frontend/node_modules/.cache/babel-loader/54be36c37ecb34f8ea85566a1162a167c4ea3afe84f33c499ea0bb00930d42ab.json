{"ast":null,"code":"'use strict';\n\nconst Helper = require('./helper.js');\nconst Geocoder = require('./geocoder.js');\nconst FetchAdapter = require('./httpadapter/fetchadapter.js');\nconst GoogleGeocoder = require('./geocoder/googlegeocoder.js');\nconst HereGeocoder = require('./geocoder/heregeocoder.js');\nconst AGOLGeocoder = require('./geocoder/agolgeocoder.js');\nconst FreegeoipGeocoder = require('./geocoder/freegeoipgeocoder.js');\nconst DataScienceToolkitGeocoder = require('./geocoder/datasciencetoolkitgeocoder.js');\nconst OpenStreetMapGeocoder = require('./geocoder/openstreetmapgeocoder.js');\nconst PickPointGeocoder = require('./geocoder/pickpointgeocoder.js');\nconst LocationIQGeocoder = require('./geocoder/locationiqgeocoder.js');\nconst MapQuestGeocoder = require('./geocoder/mapquestgeocoder.js');\nconst MapzenGeocoder = require('./geocoder/mapzengeocoder.js');\nconst OpenMapQuestGeocoder = require('./geocoder/openmapquestgeocoder.js');\nconst YandexGeocoder = require('./geocoder/yandexgeocoder.js');\nconst GeocodioGeocoder = require('./geocoder/geocodiogeocoder.js');\nconst OpenCageGeocoder = require('./geocoder/opencagegeocoder.js');\nconst NominatimMapquestGeocoder = require('./geocoder/nominatimmapquestgeocoder.js');\nconst TomTomGeocoder = require('./geocoder/tomtomgeocoder.js');\nconst VirtualEarthGeocoder = require('./geocoder/virtualearth.js');\nconst SmartyStreets = require('./geocoder/smartystreetsgeocoder.js');\nconst TeleportGeocoder = require('./geocoder/teleportgeocoder.js');\nconst OpendataFranceGeocoder = require('./geocoder/opendatafrancegeocoder.js');\nconst MapBoxGeocoder = require('./geocoder/mapboxgeocoder.js');\nconst APlaceGeocoder = require('./geocoder/aplacegeocoder.js');\n\n/**\n * Geocoder Facotry\n */\nconst GeocoderFactory = {\n  /**\n   * Return an http adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getHttpAdapter: function (adapterName, options) {\n    if (adapterName === 'fetch') {\n      return new FetchAdapter(options);\n    }\n  },\n  /**\n   * Return a geocoder adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getGeocoder: function (geocoderName, adapter, extra) {\n    if (geocoderName === 'google') {\n      return new GoogleGeocoder(adapter, {\n        clientId: extra.clientId,\n        apiKey: extra.apiKey,\n        language: extra.language,\n        region: extra.region,\n        excludePartialMatches: extra.excludePartialMatches,\n        channel: extra.channel\n      });\n    }\n    if (geocoderName === 'here') {\n      return new HereGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        appId: extra.appId,\n        appCode: extra.appCode,\n        language: extra.language,\n        politicalView: extra.politicalView,\n        country: extra.country,\n        state: extra.state,\n        production: extra.production,\n        limit: extra.limit\n      });\n    }\n    if (geocoderName === 'agol') {\n      return new AGOLGeocoder(adapter, {\n        client_id: extra.client_id,\n        client_secret: extra.client_secret\n      });\n    }\n    if (geocoderName === 'freegeoip') {\n      return new FreegeoipGeocoder(adapter);\n    }\n    if (geocoderName === 'datasciencetoolkit') {\n      return new DataScienceToolkitGeocoder(adapter, {\n        host: extra.host\n      });\n    }\n    if (geocoderName === 'openstreetmap') {\n      return new OpenStreetMapGeocoder(adapter, {\n        language: extra.language,\n        osmServer: extra.osmServer\n      });\n    }\n    if (geocoderName === 'pickpoint') {\n      return new PickPointGeocoder(adapter, {\n        language: extra.language,\n        apiKey: extra.apiKey\n      });\n    }\n    if (geocoderName === 'locationiq') {\n      return new LocationIQGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'mapquest') {\n      return new MapQuestGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'mapzen') {\n      return new MapzenGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'openmapquest') {\n      return new OpenMapQuestGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'yandex') {\n      return new YandexGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        language: extra.language,\n        results: extra.results,\n        skip: extra.skip,\n        kind: extra.kind,\n        bbox: extra.bbox,\n        rspn: extra.rspn\n      });\n    }\n    if (geocoderName === 'geocodio') {\n      return new GeocodioGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'opencage') {\n      return new OpenCageGeocoder(adapter, extra.apiKey, extra);\n    }\n    if (geocoderName === 'nominatimmapquest') {\n      return new NominatimMapquestGeocoder(adapter, {\n        language: extra.language,\n        apiKey: extra.apiKey\n      });\n    }\n    if (geocoderName === 'tomtom') {\n      return new TomTomGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        country: extra.country,\n        limit: extra.limit\n      });\n    }\n    if (geocoderName === 'virtualearth') {\n      return new VirtualEarthGeocoder(adapter, {\n        apiKey: extra.apiKey\n      });\n    }\n    if (geocoderName === 'smartystreets') {\n      return new SmartyStreets(adapter, extra.auth_id, extra.auth_token);\n    }\n    if (geocoderName === 'teleport') {\n      return new TeleportGeocoder(adapter, extra.apiKey, extra);\n    }\n    if (geocoderName === 'opendatafrance') {\n      return new OpendataFranceGeocoder(adapter);\n    }\n    if (geocoderName === 'mapbox') {\n      return new MapBoxGeocoder(adapter, extra);\n    }\n    if (geocoderName === 'aplace') {\n      return new APlaceGeocoder(adapter, extra);\n    }\n    throw new Error('No geocoder provider find for : ' + geocoderName);\n  },\n  /**\n   * Return an formatter adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getFormatter: function (formatterName, extra) {\n    if (formatterName === 'gpx') {\n      var GpxFormatter = require('./formatter/gpxformatter.js');\n      return new GpxFormatter();\n    }\n    if (formatterName === 'string') {\n      var StringFormatter = require('./formatter/stringformatter.js');\n      return new StringFormatter(extra.formatterPattern);\n    }\n  },\n  /**\n   * Return a geocoder\n   * @param  <string|object> geocoderAdapter Geocoder adapter name or adapter object\n   * @param  <array>         extra           Extra parameters array\n   * @return <object>\n   */\n  getGeocoder: function (geocoderAdapter, extra) {\n    if (typeof geocoderAdapter === 'object') {\n      extra = geocoderAdapter;\n      geocoderAdapter = null;\n    }\n    if (!extra) {\n      extra = {};\n    }\n    if (extra.provider) {\n      geocoderAdapter = extra.provider;\n    }\n    if (!geocoderAdapter) {\n      geocoderAdapter = 'google';\n    }\n    const httpAdapter = this._getHttpAdapter('fetch', extra);\n    if (Helper.isString(geocoderAdapter)) {\n      geocoderAdapter = this._getGeocoder(geocoderAdapter, httpAdapter, extra);\n    }\n    var formatter = extra.formatter;\n    if (Helper.isString(formatter)) {\n      formatter = this._getFormatter(formatter, extra);\n    }\n    return new Geocoder(geocoderAdapter, formatter);\n  }\n};\nmodule.exports = GeocoderFactory;","map":{"version":3,"names":["Helper","require","Geocoder","FetchAdapter","GoogleGeocoder","HereGeocoder","AGOLGeocoder","FreegeoipGeocoder","DataScienceToolkitGeocoder","OpenStreetMapGeocoder","PickPointGeocoder","LocationIQGeocoder","MapQuestGeocoder","MapzenGeocoder","OpenMapQuestGeocoder","YandexGeocoder","GeocodioGeocoder","OpenCageGeocoder","NominatimMapquestGeocoder","TomTomGeocoder","VirtualEarthGeocoder","SmartyStreets","TeleportGeocoder","OpendataFranceGeocoder","MapBoxGeocoder","APlaceGeocoder","GeocoderFactory","_getHttpAdapter","adapterName","options","_getGeocoder","geocoderName","adapter","extra","clientId","apiKey","language","region","excludePartialMatches","channel","appId","appCode","politicalView","country","state","production","limit","client_id","client_secret","host","osmServer","results","skip","kind","bbox","rspn","auth_id","auth_token","Error","_getFormatter","formatterName","GpxFormatter","StringFormatter","formatterPattern","getGeocoder","geocoderAdapter","provider","httpAdapter","isString","formatter","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoderfactory.js"],"sourcesContent":["'use strict';\n\nconst Helper = require('./helper.js');\nconst Geocoder = require('./geocoder.js');\n\nconst FetchAdapter = require('./httpadapter/fetchadapter.js');\n\nconst GoogleGeocoder = require('./geocoder/googlegeocoder.js');\nconst HereGeocoder = require('./geocoder/heregeocoder.js');\nconst AGOLGeocoder = require('./geocoder/agolgeocoder.js');\nconst FreegeoipGeocoder = require('./geocoder/freegeoipgeocoder.js');\nconst DataScienceToolkitGeocoder = require('./geocoder/datasciencetoolkitgeocoder.js');\nconst OpenStreetMapGeocoder = require('./geocoder/openstreetmapgeocoder.js');\nconst PickPointGeocoder = require('./geocoder/pickpointgeocoder.js');\nconst LocationIQGeocoder = require('./geocoder/locationiqgeocoder.js');\nconst MapQuestGeocoder = require('./geocoder/mapquestgeocoder.js');\nconst MapzenGeocoder = require('./geocoder/mapzengeocoder.js');\nconst OpenMapQuestGeocoder = require('./geocoder/openmapquestgeocoder.js');\nconst YandexGeocoder = require('./geocoder/yandexgeocoder.js');\nconst GeocodioGeocoder = require('./geocoder/geocodiogeocoder.js');\nconst OpenCageGeocoder = require('./geocoder/opencagegeocoder.js');\nconst NominatimMapquestGeocoder = require('./geocoder/nominatimmapquestgeocoder.js');\nconst TomTomGeocoder = require('./geocoder/tomtomgeocoder.js');\nconst VirtualEarthGeocoder = require('./geocoder/virtualearth.js');\nconst SmartyStreets = require('./geocoder/smartystreetsgeocoder.js');\nconst TeleportGeocoder = require('./geocoder/teleportgeocoder.js');\nconst OpendataFranceGeocoder = require('./geocoder/opendatafrancegeocoder.js');\nconst MapBoxGeocoder = require('./geocoder/mapboxgeocoder.js');\nconst APlaceGeocoder = require('./geocoder/aplacegeocoder.js');\n\n/**\n * Geocoder Facotry\n */\nconst GeocoderFactory = {\n  /**\n   * Return an http adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getHttpAdapter: function (adapterName, options) {\n    if (adapterName === 'fetch') {\n      return new FetchAdapter(options);\n    }\n  },\n  /**\n   * Return a geocoder adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getGeocoder: function (geocoderName, adapter, extra) {\n    if (geocoderName === 'google') {\n      return new GoogleGeocoder(adapter, {\n        clientId: extra.clientId,\n        apiKey: extra.apiKey,\n        language: extra.language,\n        region: extra.region,\n        excludePartialMatches: extra.excludePartialMatches,\n        channel: extra.channel\n      });\n    }\n    if (geocoderName === 'here') {\n      return new HereGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        appId: extra.appId,\n        appCode: extra.appCode,\n        language: extra.language,\n        politicalView: extra.politicalView,\n        country: extra.country,\n        state: extra.state,\n        production: extra.production,\n        limit: extra.limit\n      });\n    }\n    if (geocoderName === 'agol') {\n      return new AGOLGeocoder(adapter, {\n        client_id: extra.client_id,\n        client_secret: extra.client_secret\n      });\n    }\n    if (geocoderName === 'freegeoip') {\n      return new FreegeoipGeocoder(adapter);\n    }\n    if (geocoderName === 'datasciencetoolkit') {\n      return new DataScienceToolkitGeocoder(adapter, { host: extra.host });\n    }\n    if (geocoderName === 'openstreetmap') {\n      return new OpenStreetMapGeocoder(adapter, {\n        language: extra.language,\n        osmServer: extra.osmServer\n      });\n    }\n    if (geocoderName === 'pickpoint') {\n      return new PickPointGeocoder(adapter, {\n        language: extra.language,\n        apiKey: extra.apiKey\n      });\n    }\n    if (geocoderName === 'locationiq') {\n      return new LocationIQGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'mapquest') {\n      return new MapQuestGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'mapzen') {\n      return new MapzenGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'openmapquest') {\n      return new OpenMapQuestGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'yandex') {\n      return new YandexGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        language: extra.language,\n        results: extra.results,\n        skip: extra.skip,\n        kind: extra.kind,\n        bbox: extra.bbox,\n        rspn: extra.rspn\n      });\n    }\n    if (geocoderName === 'geocodio') {\n      return new GeocodioGeocoder(adapter, extra.apiKey);\n    }\n    if (geocoderName === 'opencage') {\n      return new OpenCageGeocoder(adapter, extra.apiKey, extra);\n    }\n    if (geocoderName === 'nominatimmapquest') {\n      return new NominatimMapquestGeocoder(adapter, {\n        language: extra.language,\n        apiKey: extra.apiKey\n      });\n    }\n    if (geocoderName === 'tomtom') {\n      return new TomTomGeocoder(adapter, {\n        apiKey: extra.apiKey,\n        country: extra.country,\n        limit: extra.limit\n      });\n    }\n    if (geocoderName === 'virtualearth') {\n      return new VirtualEarthGeocoder(adapter, { apiKey: extra.apiKey });\n    }\n    if (geocoderName === 'smartystreets') {\n      return new SmartyStreets(adapter, extra.auth_id, extra.auth_token);\n    }\n    if (geocoderName === 'teleport') {\n      return new TeleportGeocoder(adapter, extra.apiKey, extra);\n    }\n    if (geocoderName === 'opendatafrance') {\n      return new OpendataFranceGeocoder(adapter);\n    }\n    if (geocoderName === 'mapbox') {\n      return new MapBoxGeocoder(adapter, extra);\n    }\n    if (geocoderName === 'aplace') {\n      return new APlaceGeocoder(adapter, extra);\n    }\n    throw new Error('No geocoder provider find for : ' + geocoderName);\n  },\n  /**\n   * Return an formatter adapter by name\n   * @param  <string> adapterName adapter name\n   * @return <object>\n   */\n  _getFormatter: function (formatterName, extra) {\n    if (formatterName === 'gpx') {\n      var GpxFormatter = require('./formatter/gpxformatter.js');\n\n      return new GpxFormatter();\n    }\n\n    if (formatterName === 'string') {\n      var StringFormatter = require('./formatter/stringformatter.js');\n\n      return new StringFormatter(extra.formatterPattern);\n    }\n  },\n  /**\n   * Return a geocoder\n   * @param  <string|object> geocoderAdapter Geocoder adapter name or adapter object\n   * @param  <array>         extra           Extra parameters array\n   * @return <object>\n   */\n  getGeocoder: function (geocoderAdapter, extra) {\n    if (typeof geocoderAdapter === 'object') {\n      extra = geocoderAdapter;\n      geocoderAdapter = null;\n    }\n\n    if (!extra) {\n      extra = {};\n    }\n\n    if (extra.provider) {\n      geocoderAdapter = extra.provider;\n    }\n\n    if (!geocoderAdapter) {\n      geocoderAdapter = 'google';\n    }\n\n    const httpAdapter = this._getHttpAdapter('fetch', extra);\n\n    if (Helper.isString(geocoderAdapter)) {\n      geocoderAdapter = this._getGeocoder(geocoderAdapter, httpAdapter, extra);\n    }\n\n    var formatter = extra.formatter;\n\n    if (Helper.isString(formatter)) {\n      formatter = this._getFormatter(formatter, extra);\n    }\n\n    return new Geocoder(geocoderAdapter, formatter);\n  }\n};\n\nmodule.exports = GeocoderFactory;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}