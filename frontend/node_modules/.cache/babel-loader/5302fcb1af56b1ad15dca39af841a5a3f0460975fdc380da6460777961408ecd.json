{"ast":null,"code":"var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar GeocodioGeocoder = function GeocodioGeocoder(httpAdapter, apiKey) {\n  GeocodioGeocoder.super_.call(this, httpAdapter);\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n  this.apiKey = apiKey;\n  this._endpoint = 'https://api.geocod.io/v1';\n};\nutil.inherits(GeocodioGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/geocode', {\n    q: value,\n    api_key: querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (result.error) {\n      return callback(new Error('Status is ' + result.error), {\n        raw: result\n      });\n    }\n    var results = [];\n    var locations = result.results;\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n    results.raw = result;\n    callback(false, results);\n  });\n};\nGeocodioGeocoder.prototype._formatResult = function (result) {\n  var accuracy = result.accuracy < 1 ? result.accuracy - 0.1 : 1;\n  return {\n    latitude: result.location.lat,\n    longitude: result.location.lng,\n    country: result.address_components.country,\n    formattedAddress: result.formatted_address,\n    city: result.address_components.city,\n    state: result.address_components.state,\n    zipcode: result.address_components.zip,\n    streetName: result.address_components.formatted_street,\n    streetNumber: result.address_components.number,\n    countryCode: null,\n    extra: {\n      confidence: accuracy || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    q: lat + ',' + lng,\n    api_key: querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    var results = [];\n    var locations = result.results;\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n    results.raw = result;\n    callback(false, results);\n  });\n};\nmodule.exports = GeocodioGeocoder;","map":{"version":3,"names":["querystring","require","util","AbstractGeocoder","GeocodioGeocoder","httpAdapter","apiKey","super_","call","Error","constructor","name","_endpoint","inherits","prototype","_geocode","value","callback","_this","get","q","api_key","unescape","err","result","error","raw","results","locations","i","length","push","_formatResult","accuracy","latitude","location","lat","longitude","lng","country","address_components","formattedAddress","formatted_address","city","state","zipcode","zip","streetName","formatted_street","streetNumber","number","countryCode","extra","confidence","_reverse","query","lon","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/geocodiogeocoder.js"],"sourcesContent":["var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar GeocodioGeocoder = function GeocodioGeocoder(httpAdapter, apiKey) {\n  GeocodioGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'https://api.geocod.io/v1';\n};\n\nutil.inherits(GeocodioGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(\n    this._endpoint + '/geocode',\n    {\n      q: value,\n      api_key: querystring.unescape(this.apiKey)\n    },\n    function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n      if (result.error) {\n        return callback(new Error('Status is ' + result.error), {\n          raw: result\n        });\n      }\n\n      var results = [];\n\n      var locations = result.results;\n\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  );\n};\n\nGeocodioGeocoder.prototype._formatResult = function (result) {\n  var accuracy = result.accuracy < 1 ? result.accuracy - 0.1 : 1;\n  return {\n    latitude: result.location.lat,\n    longitude: result.location.lng,\n    country: result.address_components.country,\n    formattedAddress: result.formatted_address,\n    city: result.address_components.city,\n    state: result.address_components.state,\n    zipcode: result.address_components.zip,\n    streetName: result.address_components.formatted_street,\n    streetNumber: result.address_components.number,\n    countryCode: null,\n    extra: {\n      confidence: accuracy || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(\n    this._endpoint + '/reverse',\n    {\n      q: lat + ',' + lng,\n      api_key: querystring.unescape(this.apiKey)\n    },\n    function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      var results = [];\n      var locations = result.results;\n\n      for (var i = 0; i < locations.length; i++) {\n        results.push(_this._formatResult(locations[i]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  );\n};\n\nmodule.exports = GeocodioGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}