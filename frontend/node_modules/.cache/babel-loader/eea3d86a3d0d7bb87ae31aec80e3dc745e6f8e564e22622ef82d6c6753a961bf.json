{"ast":null,"code":"'use strict';\n\nvar net = require('net');\nvar ValueError = require('../error/valueerror.js');\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * AbstractGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\nvar AbstractGeocoder = function (httpAdapter, options) {\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n  this.name = formatGeocoderName(this.constructor.name);\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n  if (!options || options == 'undefined') {\n    options = {};\n  }\n  if (this.options) {\n    this.options.forEach(function (option) {\n      if (!options[option] || options[option] == 'undefined') {\n        options[option] = null;\n      }\n    });\n  }\n  this.options = options;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nAbstractGeocoder.prototype.reverse = function (query, callback) {\n  if (typeof this._reverse != 'function') {\n    throw new Error(this.constructor.name + ' no support reverse geocoding');\n  }\n  return this._reverse(query, callback);\n};\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode\n * @param <function> callback Callback method\n */\nAbstractGeocoder.prototype.geocode = function (value, callback) {\n  var address = value;\n  if (typeof value === 'object') {\n    address = value.address;\n  }\n  if (typeof this._geocode != 'function') {\n    throw new ValueError(this.constructor.name + ' does not support geocoding');\n  }\n  if (net.isIPv4(address) && (!this.supportIPv4 || this.supportIPv4 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv4');\n  }\n  if (net.isIPv6(address) && (!this.supportIPv6 || this.supportIPv6 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv6');\n  }\n  if (this.supportAddress === false && !net.isIPv4(address) && !net.isIPv6(address)) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding address');\n  }\n  return this._geocode(value, callback);\n};\n\n/**\n * Batch Geocode\n * @param <string[]>   values    Valueas to geocode\n * @param <function> callback Callback method\n */\nAbstractGeocoder.prototype.batchGeocode = function (values, callback) {\n  if (typeof this._batchGeocode === 'function') {\n    this._batchGeocode(values, callback);\n  } else {\n    Promise.all(values.map(value => new Promise(resolve => {\n      this.geocode(value, (error, value) => {\n        resolve({\n          error,\n          value\n        });\n      });\n    }))).then(data => callback(null, data));\n  }\n};\nmodule.exports = AbstractGeocoder;","map":{"version":3,"names":["net","require","ValueError","formatGeocoderName","name","toLowerCase","replace","AbstractGeocoder","httpAdapter","options","constructor","Error","forEach","option","prototype","reverse","query","callback","_reverse","geocode","value","address","_geocode","isIPv4","supportIPv4","isIPv6","supportIPv6","supportAddress","batchGeocode","values","_batchGeocode","Promise","all","map","resolve","error","then","data","module","exports"],"sources":["/home/pratheek/Desktop/Attendance/frontend/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"],"sourcesContent":["'use strict';\n\nvar net = require('net');\nvar ValueError = require('../error/valueerror.js');\n\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * AbstractGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\nvar AbstractGeocoder = function(httpAdapter, options) {\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n\n  this.name = formatGeocoderName(this.constructor.name);\n\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n\n  if (!options || options == 'undefined') {\n    options = {};\n  }\n\n  if (this.options) {\n    this.options.forEach(function(option) {\n      if (!options[option] || options[option] == 'undefined') {\n        options[option] = null;\n      }\n    });\n  }\n\n  this.options = options;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nAbstractGeocoder.prototype.reverse = function(query, callback) {\n  if (typeof this._reverse != 'function') {\n    throw new Error(this.constructor.name + ' no support reverse geocoding');\n  }\n\n  return this._reverse(query, callback);\n};\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode\n * @param <function> callback Callback method\n */\nAbstractGeocoder.prototype.geocode = function(value, callback) {\n  var address = value;\n  if (typeof value === 'object') {\n    address = value.address;\n  }\n  if (typeof this._geocode != 'function') {\n    throw new ValueError(this.constructor.name + ' does not support geocoding');\n  }\n  if (\n    net.isIPv4(address) &&\n    (!this.supportIPv4 || this.supportIPv4 == 'undefined')\n  ) {\n    throw new ValueError(\n      this.constructor.name + ' does not support geocoding IPv4'\n    );\n  }\n\n  if (\n    net.isIPv6(address) &&\n    (!this.supportIPv6 || this.supportIPv6 == 'undefined')\n  ) {\n    throw new ValueError(\n      this.constructor.name + ' does not support geocoding IPv6'\n    );\n  }\n\n  if (\n    this.supportAddress === false &&\n    !net.isIPv4(address) && !net.isIPv6(address)\n  ) {\n    throw new ValueError(\n      this.constructor.name + ' does not support geocoding address'\n    );\n  }\n\n  return this._geocode(value, callback);\n};\n\n/**\n * Batch Geocode\n * @param <string[]>   values    Valueas to geocode\n * @param <function> callback Callback method\n */\n AbstractGeocoder.prototype.batchGeocode = function(values, callback) {\n  if (typeof this._batchGeocode === 'function') {\n    this._batchGeocode(values, callback);\n  } else {\n    Promise.all(\n      values.map(value => \n        new Promise(resolve => {\n          this.geocode(value, (error, value) => {\n            resolve({\n              error,\n              value\n            });\n          });\n        })\n      )\n    )\n      .then(data => callback(null, data));\n  }\n};\n\nmodule.exports = AbstractGeocoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}